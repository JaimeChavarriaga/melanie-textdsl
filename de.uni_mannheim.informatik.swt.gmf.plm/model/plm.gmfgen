<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" modelID="LML"
    sameFileForDiagramAndModel="true"
    diagramFileExtension="lml"
    dynamicTemplates="true"
    templateDirectory="/de.uni_mannheim.informatik.swt.gmf.plm/templates">
  <audits>
    <categories
        id="audits.attributes"
        name="attributes"
        description="Container for Attribute Audits"
        path="//@audits/@categories.0"
        audits="//@audits/@rules.0"/>
    <rules
        name="domainEntityNameCheck"
        description="Checks the name of elements"
        id="audits.attributes.domainEntityNameAudit"
        rule="//@expressionProviders/@providers.0/@expressions.97"
        message="Name wrong"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/DomainElement"/>
      </target>
    </rules>
    <clientContexts
        ruleTargets="//@audits/@rules.0/@target"/>
  </audits>
  <diagram
      visualID="1000"
      editPartClassName="LMLModelEditPart"
      itemSemanticEditPolicyClassName="LMLModelItemSemanticEditPolicy"
      canonicalEditPolicyClassName="LMLModelCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Medium"
      validationEnabled="true"
      validationDecorators="true"
      validationDecoratorProviderPriority="Medium">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="LMLModelEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/LMLModel"/>
    <childNodes
        visualID="3029"
        editPartClassName="ModelEditPart"
        itemSemanticEditPolicyClassName="ModelItemSemanticEditPolicy"
        notationViewFactoryClassName="ModelViewFactory"
        canonicalEditPolicyClassName="ModelCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.1"
        compartments="//@diagram/@compartments.1"
        graphicalNodeEditPolicyClassName="ModelGraphicalNodeEditPolicy"
        createCommandClassName="ModelCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ModelEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ModelFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ModelFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureOntologyLevelNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureOntologyLevelAVSFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ModelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(500)&#xA;, getMapMode().DPtoLP(150)&#xA;));&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutInnerRectangle0 = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutInnerRectangle0.setStretchMinorAxis(true);&#xA;&#x9;layoutInnerRectangle0.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutInnerRectangle0.setSpacing(0);&#xA;&#x9;layoutInnerRectangle0.setVertical(true);&#xA;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle1.setFill(false);&#xA;nameRectangle1.setOutline(false);&#xA;&#xA;innerRectangle0.add(nameRectangle1);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle1.numColumns = 2;&#xA;&#x9;layoutNameRectangle1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.marginWidth = 0;&#xA;&#x9;layoutNameRectangle1.marginHeight = 3;&#xA;&#x9;nameRectangle1.setLayoutManager(layoutNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureOntologyLevelNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureOntologyLevelNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureOntologyLevelNameFigure.setFont(FFIGUREONTOLOGYLEVELNAMEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureOntologyLevelNameFigure.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureOntologyLevelNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureOntologyLevelNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureOntologyLevelNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureOntologyLevelNameFigure.horizontalIndent = 0;&#xA;constraintFFigureOntologyLevelNameFigure.horizontalSpan = 1;&#xA;constraintFFigureOntologyLevelNameFigure.verticalSpan = 1;&#xA;constraintFFigureOntologyLevelNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureOntologyLevelNameFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle1.add(fFigureOntologyLevelNameFigure, constraintFFigureOntologyLevelNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureOntologyLevelAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureOntologyLevelAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureOntologyLevelAVSFigure.setFont(FFIGUREONTOLOGYLEVELAVSFIGURE_FONT);&#xA;&#xA;&#xA;fFigureOntologyLevelAVSFigure.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureOntologyLevelAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureOntologyLevelAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureOntologyLevelAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureOntologyLevelAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureOntologyLevelAVSFigure.horizontalSpan = 1;&#xA;constraintFFigureOntologyLevelAVSFigure.verticalSpan = 1;&#xA;constraintFFigureOntologyLevelAVSFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureOntologyLevelAVSFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureOntologyLevelAVSFigure, constraintFFigureOntologyLevelAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;de.uni_mannheim.informatik.swt.gmf.borders.CustomBorder result = new de.uni_mannheim.informatik.swt.gmf.borders.CustomBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#xA;result.setBottom(&#xA;true);&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureOntologyLevelNameFigure() {&#xA;&#x9;&#x9;return fFigureOntologyLevelNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureOntologyLevelAVSFigure() {&#xA;&#x9;&#x9;return fFigureOntologyLevelAVSFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREONTOLOGYLEVELNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREONTOLOGYLEVELAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Ontology/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Ontology/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.2">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.3">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5082"
          editPartClassName="ModelNameEditPart"
          itemSemanticEditPolicyClassName="ModelNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ModelNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureOntologyLevelNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5097"
          editPartClassName="WrappingLabel2EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel2ItemSemanticEditPolicy"
          notationViewFactoryClassName="ModelLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureOntologyLevelAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.48"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3040"
        editPartClassName="RendererEditPart"
        itemSemanticEditPolicyClassName="RendererItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="RendererCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="RendererGraphicalNodeEditPolicy"
        createCommandClassName="RendererCreateCommand"
        containers="//@diagram/@childNodes.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="RendererEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5099"
          editPartClassName="WrappingLabel3EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel3ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.0"/>
      </labels>
      <labels
          visualID="5100"
          editPartClassName="WrappingLabel4EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel4ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.1"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3053"
        editPartClassName="ConnectionEditPart"
        itemSemanticEditPolicyClassName="ConnectionItemSemanticEditPolicy"
        notationViewFactoryClassName="ConnectionViewFactory"
        canonicalEditPolicyClassName="ConnectionCanonicalEditPolicy"
        compartments="//@diagram/@compartments.2 //@diagram/@compartments.3 //@diagram/@compartments.4"
        graphicalNodeEditPolicyClassName="ConnectionGraphicalNodeEditPolicy"
        createCommandClassName="ConnectionCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ConnectionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="ConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionPotencyFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionLevelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionAVSFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(40)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(45)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(40)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 2;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 3;&#xA;&#x9;layoutNameRectangle0.marginHeight = 3;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureConnectionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureConnectionNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionNameFigure.setFont(FFIGURECONNECTIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureConnectionNameFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionNameFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionNameFigure.verticalSpan = 4;&#xA;constraintFFigureConnectionNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionNameFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigureConnectionNameFigure, constraintFFigureConnectionNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureConnectionPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionPotencyFigure.setFont(FFIGURECONNECTIONPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureConnectionPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionPotencyFigure.verticalSpan = 2;&#xA;constraintFFigureConnectionPotencyFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionPotencyFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureConnectionPotencyFigure, constraintFFigureConnectionPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionLevelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureConnectionLevelFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionLevelFigure.setFont(FFIGURECONNECTIONLEVELFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionLevelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionLevelFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionLevelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionLevelFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionLevelFigure.horizontalSpan = 1;&#xA;constraintFFigureConnectionLevelFigure.verticalSpan = 2;&#xA;constraintFFigureConnectionLevelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionLevelFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureConnectionLevelFigure, constraintFFigureConnectionLevelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureConnectionAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureConnectionAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConnectionAVSFigure.setFont(FFIGURECONNECTIONAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConnectionAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConnectionAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureConnectionAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConnectionAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureConnectionAVSFigure.horizontalSpan = 2;&#xA;constraintFFigureConnectionAVSFigure.verticalSpan = 1;&#xA;constraintFFigureConnectionAVSFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConnectionAVSFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureConnectionAVSFigure, constraintFFigureConnectionAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionPotencyFigure() {&#xA;&#x9;&#x9;return fFigureConnectionPotencyFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionLevelFigure() {&#xA;&#x9;&#x9;return fFigureConnectionLevelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionAVSFigure() {&#xA;&#x9;&#x9;return fFigureConnectionAVSFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONLEVELFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.6">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection/isNavigable"/>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.7">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection/roleName"/>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.8">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection/lower"/>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.9">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection/upper"/>
          </initializers>
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.10">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.11">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5134"
          editPartClassName="WrappingLabel5EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel5ItemSemanticEditPolicy"
          notationViewFactoryClassName="ConnectionLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.14"/>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5135"
          editPartClassName="ConnectionNameEditPart"
          itemSemanticEditPolicyClassName="ConnectionNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ConnectionNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ConnectionNameExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionNameExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionNameExternalFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionNameExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureConnectionNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5136"
          editPartClassName="WrappingLabel6EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel6ItemSemanticEditPolicy"
          notationViewFactoryClassName="ConnectionLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionLevelFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.15"/>
      </labels>
      <labels
          visualID="5137"
          editPartClassName="WrappingLabel7EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel7ItemSemanticEditPolicy"
          notationViewFactoryClassName="ConnectionLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.16"/>
      </labels>
      <labels
          visualID="5138"
          editPartClassName="WrappingLabel8EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel8ItemSemanticEditPolicy"
          notationViewFactoryClassName="ConnectionLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.17"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3050"
        editPartClassName="AttributeEditPart"
        itemSemanticEditPolicyClassName="AttributeItemSemanticEditPolicy"
        notationViewFactoryClassName="AttributeViewFactory"
        canonicalEditPolicyClassName="AttributeCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.4"
        graphicalNodeEditPolicyClassName="AttributeGraphicalNodeEditPolicy"
        createCommandClassName="AttributeCreateCommand"
        containers="//@diagram/@compartments.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="AttributeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="AttributeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AttributeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDurabilityFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeVariabilityFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDataTypeFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDefaultValueFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AttributeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left1 = new org.eclipse.draw2d.RectangleFigure();&#xA;left1.setFill(false);&#xA;left1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintLeft1.horizontalIndent = 0;&#xA;constraintLeft1.horizontalSpan = 1;&#xA;constraintLeft1.verticalSpan = 1;&#xA;constraintLeft1.grabExcessHorizontalSpace = false;&#xA;constraintLeft1.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(left1, constraintLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLeft1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLeft1.numColumns = 2;&#xA;&#x9;layoutLeft1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutLeft1.horizontalSpacing = 0;&#xA;&#x9;layoutLeft1.verticalSpacing = 0;&#xA;&#x9;layoutLeft1.marginWidth = 0;&#xA;&#x9;layoutLeft1.marginHeight = 0;&#xA;&#x9;left1.setLayoutManager(layoutLeft1);&#xA;&#xA;&#xA;&#xA;fFigureAttributeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeNameFigure.setFont(FFIGUREATTRIBUTENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeNameFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeNameFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeNameFigure.verticalSpan = 4;&#xA;constraintFFigureAttributeNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeNameFigure.grabExcessVerticalSpace = true;&#xA;left1.add(fFigureAttributeNameFigure, constraintFFigureAttributeNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDurabilityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeDurabilityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDurabilityFigure.setFont(FFIGUREATTRIBUTEDURABILITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDurabilityFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDurabilityFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDurabilityFigure.verticalSpan = 2;&#xA;constraintFFigureAttributeDurabilityFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDurabilityFigure.grabExcessVerticalSpace = true;&#xA;left1.add(fFigureAttributeDurabilityFigure, constraintFFigureAttributeDurabilityFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeVariabilityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeVariabilityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeVariabilityFigure.setFont(FFIGUREATTRIBUTEVARIABILITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeVariabilityFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeVariabilityFigure.verticalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeVariabilityFigure.verticalSpan = 2;&#xA;constraintFFigureAttributeVariabilityFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeVariabilityFigure.grabExcessVerticalSpace = true;&#xA;left1.add(fFigureAttributeVariabilityFigure, constraintFFigureAttributeVariabilityFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right1 = new org.eclipse.draw2d.RectangleFigure();&#xA;right1.setFill(false);&#xA;right1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight1.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintRight1.horizontalIndent = 0;&#xA;constraintRight1.horizontalSpan = 1;&#xA;constraintRight1.verticalSpan = 1;&#xA;constraintRight1.grabExcessHorizontalSpace = true;&#xA;constraintRight1.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(right1, constraintRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight1.numColumns = 2;&#xA;&#x9;layoutRight1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight1.horizontalSpacing = 0;&#xA;&#x9;layoutRight1.verticalSpacing = 0;&#xA;&#x9;layoutRight1.marginWidth = 0;&#xA;&#x9;layoutRight1.marginHeight = 0;&#xA;&#x9;right1.setLayoutManager(layoutRight1);&#xA;&#xA;&#xA;&#xA;fFigureAttributeDataTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeDataTypeFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDataTypeFigure.setFont(FFIGUREATTRIBUTEDATATYPEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDataTypeFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDataTypeFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDataTypeFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDataTypeFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDataTypeFigure.grabExcessVerticalSpace = false;&#xA;right1.add(fFigureAttributeDataTypeFigure, constraintFFigureAttributeDataTypeFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDefaultValueFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeDefaultValueFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDefaultValueFigure.setFont(FFIGUREATTRIBUTEDEFAULTVALUEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDefaultValueFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDefaultValueFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDefaultValueFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDefaultValueFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAttributeDefaultValueFigure.grabExcessVerticalSpace = false;&#xA;right1.add(fFigureAttributeDefaultValueFigure, constraintFFigureAttributeDefaultValueFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeNameFigure() {&#xA;&#x9;&#x9;return fFigureAttributeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDurabilityFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDurabilityFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeVariabilityFigure() {&#xA;&#x9;&#x9;return fFigureAttributeVariabilityFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDataTypeFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDataTypeFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDefaultValueFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDefaultValueFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDURABILITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEVARIABILITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDATATYPEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDEFAULTVALUEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Clabject/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Clabject/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.12">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.13">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5121"
          editPartClassName="AttributeNameEditPart"
          itemSemanticEditPolicyClassName="AttributeNameItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4"
            viewPattern="">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5122"
          editPartClassName="WrappingLabel9EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel9ItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDurabilityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.5"/>
      </labels>
      <labels
          visualID="5123"
          editPartClassName="WrappingLabel10EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel10ItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeVariabilityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute/valueVariability"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5124"
          editPartClassName="AttributeValueEditPart"
          itemSemanticEditPolicyClassName="AttributeValueItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeValueViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDataTypeFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.6"/>
      </labels>
      <labels
          visualID="5152"
          editPartClassName="AttributeValue4EditPart"
          itemSemanticEditPolicyClassName="AttributeValue4ItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeValueViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDefaultValueFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4"
            viewPattern="= {0}">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute/value"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3041"
        editPartClassName="Renderer2EditPart"
        itemSemanticEditPolicyClassName="Renderer2ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer2GraphicalNodeEditPolicy"
        createCommandClassName="Renderer2CreateCommand"
        containers="//@diagram/@childNodes.3">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5101"
          editPartClassName="WrappingLabel14EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel14ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.2"/>
      </labels>
      <labels
          visualID="5102"
          editPartClassName="WrappingLabel15EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel15ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.3"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3020"
        editPartClassName="MethodEditPart"
        itemSemanticEditPolicyClassName="MethodItemSemanticEditPolicy"
        notationViewFactoryClassName="MethodViewFactory"
        canonicalEditPolicyClassName="MethodCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.6"
        graphicalNodeEditPolicyClassName="MethodGraphicalNodeEditPolicy"
        createCommandClassName="MethodCreateCommand"
        containers="//@diagram/@compartments.3">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="MethodEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="MethodFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class MethodFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodPotencyFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodOutputFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodInputFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public MethodFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 4;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureMethodNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMethodNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodNameFigure.setFont(FFIGUREMETHODNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodNameFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodNameFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodNameFigure.verticalSpan = 1;&#xA;constraintFFigureMethodNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodNameFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodNameFigure, constraintFFigureMethodNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMethodPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodPotencyFigure.setFont(FFIGUREMETHODPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureMethodPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureMethodPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodPotencyFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodPotencyFigure, constraintFFigureMethodPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodInputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMethodInputFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodInputFigure.setFont(FFIGUREMETHODINPUTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodInputFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodInputFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodInputFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodInputFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodInputFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodInputFigure.verticalSpan = 1;&#xA;constraintFFigureMethodInputFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodInputFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodInputFigure, constraintFFigureMethodInputFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodOutputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMethodOutputFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodOutputFigure.setFont(FFIGUREMETHODOUTPUTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodOutputFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodOutputFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodOutputFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodOutputFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodOutputFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodOutputFigure.verticalSpan = 1;&#xA;constraintFFigureMethodOutputFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodOutputFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodOutputFigure, constraintFFigureMethodOutputFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodNameFigure() {&#xA;&#x9;&#x9;return fFigureMethodNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodPotencyFigure() {&#xA;&#x9;&#x9;return fFigureMethodPotencyFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodOutputFigure() {&#xA;&#x9;&#x9;return fFigureMethodOutputFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodInputFigure() {&#xA;&#x9;&#x9;return fFigureMethodInputFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODINPUTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODOUTPUTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Method"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Clabject/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Clabject/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.18">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.19">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5041"
          editPartClassName="MethodNameEditPart"
          itemSemanticEditPolicyClassName="MethodNameItemSemanticEditPolicy"
          notationViewFactoryClassName="MethodNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5042"
          editPartClassName="WrappingLabel11EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel11ItemSemanticEditPolicy"
          notationViewFactoryClassName="MethodLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodInputFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.9"/>
      </labels>
      <labels
          visualID="5119"
          editPartClassName="WrappingLabel12EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel12ItemSemanticEditPolicy"
          notationViewFactoryClassName="MethodLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.10"/>
      </labels>
      <labels
          visualID="5120"
          editPartClassName="WrappingLabel13EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel13ItemSemanticEditPolicy"
          notationViewFactoryClassName="MethodLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodOutputFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.11"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3042"
        editPartClassName="Renderer3EditPart"
        itemSemanticEditPolicyClassName="Renderer3ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer3CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer3GraphicalNodeEditPolicy"
        createCommandClassName="Renderer3CreateCommand"
        containers="//@diagram/@childNodes.5">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5103"
          editPartClassName="WrappingLabel17EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel17ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.7"/>
      </labels>
      <labels
          visualID="5104"
          editPartClassName="WrappingLabel18EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel18ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.8"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3043"
        editPartClassName="Renderer4EditPart"
        itemSemanticEditPolicyClassName="Renderer4ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer4CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer4GraphicalNodeEditPolicy"
        createCommandClassName="Renderer4CreateCommand"
        containers="//@diagram/@compartments.4">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5105"
          editPartClassName="WrappingLabel19EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel19ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.12"/>
      </labels>
      <labels
          visualID="5106"
          editPartClassName="WrappingLabel20EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel20ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.13"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3032"
        editPartClassName="ComplementEditPart"
        itemSemanticEditPolicyClassName="ComplementItemSemanticEditPolicy"
        notationViewFactoryClassName="ComplementViewFactory"
        canonicalEditPolicyClassName="ComplementCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.9"
        graphicalNodeEditPolicyClassName="ComplementGraphicalNodeEditPolicy"
        createCommandClassName="ComplementCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ComplementEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ComplementFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComplementFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureComplementNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComplementFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 0;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureComplementNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureComplementNameFigure.setText(&quot;complements&quot;);&#xA;&#x9;fFigureComplementNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureComplementNameFigure.setFont(FFIGURECOMPLEMENTNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureComplementNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureComplementNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureComplementNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureComplementNameFigure.horizontalIndent = 0;&#xA;constraintFFigureComplementNameFigure.horizontalSpan = 1;&#xA;constraintFFigureComplementNameFigure.verticalSpan = 1;&#xA;constraintFFigureComplementNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureComplementNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureComplementNameFigure, constraintFFigureComplementNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureComplementNameFigure() {&#xA;&#x9;&#x9;return fFigureComplementNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECOMPLEMENTNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Complement"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.31">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.32">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5072"
          editPartClassName="WrappingLabel16EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel16ItemSemanticEditPolicy"
          notationViewFactoryClassName="ComplementLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureComplementNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.20"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3044"
        editPartClassName="Renderer5EditPart"
        itemSemanticEditPolicyClassName="Renderer5ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer5CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer5GraphicalNodeEditPolicy"
        createCommandClassName="Renderer5CreateCommand"
        containers="//@diagram/@childNodes.8">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5107"
          editPartClassName="WrappingLabel22EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel22ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.18"/>
      </labels>
      <labels
          visualID="5108"
          editPartClassName="WrappingLabel23EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel23ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.19"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3033"
        editPartClassName="EqualityEditPart"
        itemSemanticEditPolicyClassName="EqualityItemSemanticEditPolicy"
        notationViewFactoryClassName="EqualityViewFactory"
        canonicalEditPolicyClassName="EqualityCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.11"
        graphicalNodeEditPolicyClassName="EqualityGraphicalNodeEditPolicy"
        createCommandClassName="EqualityCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EqualityEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EqualsFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EqualsFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEqualsNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EqualsFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutInnerRectangle0 = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutInnerRectangle0.setStretchMinorAxis(true);&#xA;&#x9;layoutInnerRectangle0.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutInnerRectangle0.setSpacing(0);&#xA;&#x9;layoutInnerRectangle0.setVertical(true);&#xA;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle1.setFill(false);&#xA;nameRectangle1.setOutline(false);&#xA;&#xA;innerRectangle0.add(nameRectangle1);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle1.numColumns = 1;&#xA;&#x9;layoutNameRectangle1.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.marginWidth = 0;&#xA;&#x9;layoutNameRectangle1.marginHeight = 0;&#xA;&#x9;nameRectangle1.setLayoutManager(layoutNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureEqualsNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEqualsNameFigure.setText(&quot;equals&quot;);&#xA;&#x9;fFigureEqualsNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureEqualsNameFigure.setFont(FFIGUREEQUALSNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEqualsNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEqualsNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEqualsNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEqualsNameFigure.horizontalIndent = 0;&#xA;constraintFFigureEqualsNameFigure.horizontalSpan = 1;&#xA;constraintFFigureEqualsNameFigure.verticalSpan = 1;&#xA;constraintFFigureEqualsNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEqualsNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureEqualsNameFigure, constraintFFigureEqualsNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEqualsNameFigure() {&#xA;&#x9;&#x9;return fFigureEqualsNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREEQUALSNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Equality"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.35">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.36">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5073"
          editPartClassName="EqualityNameEditPart"
          itemSemanticEditPolicyClassName="EqualityNameItemSemanticEditPolicy"
          notationViewFactoryClassName="EqualityNameViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEqualsNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4"
            viewPattern="{0}">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3045"
        editPartClassName="Renderer6EditPart"
        itemSemanticEditPolicyClassName="Renderer6ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer6CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer6GraphicalNodeEditPolicy"
        createCommandClassName="Renderer6CreateCommand"
        containers="//@diagram/@childNodes.10">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5109"
          editPartClassName="WrappingLabel25EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel25ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.21"/>
      </labels>
      <labels
          visualID="5110"
          editPartClassName="WrappingLabel26EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel26ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.22"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3034"
        editPartClassName="InversionEditPart"
        itemSemanticEditPolicyClassName="InversionItemSemanticEditPolicy"
        notationViewFactoryClassName="InversionViewFactory"
        canonicalEditPolicyClassName="InversionCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.13"
        graphicalNodeEditPolicyClassName="InversionGraphicalNodeEditPolicy"
        createCommandClassName="InversionCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="InversionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="InversionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InversionFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureInversionNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InversionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 0;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureInversionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureInversionNameFigure.setText(&quot;inverts&quot;);&#xA;&#x9;fFigureInversionNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureInversionNameFigure.setFont(FFIGUREINVERSIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureInversionNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureInversionNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureInversionNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureInversionNameFigure.horizontalIndent = 0;&#xA;constraintFFigureInversionNameFigure.horizontalSpan = 1;&#xA;constraintFFigureInversionNameFigure.verticalSpan = 1;&#xA;constraintFFigureInversionNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureInversionNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureInversionNameFigure, constraintFFigureInversionNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureInversionNameFigure() {&#xA;&#x9;&#x9;return fFigureInversionNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREINVERSIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Inversion"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.39">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.40">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5074"
          editPartClassName="WrappingLabel21EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel21ItemSemanticEditPolicy"
          notationViewFactoryClassName="InversionLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureInversionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.20"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3046"
        editPartClassName="Renderer7EditPart"
        itemSemanticEditPolicyClassName="Renderer7ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer7CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer7GraphicalNodeEditPolicy"
        createCommandClassName="Renderer7CreateCommand"
        containers="//@diagram/@childNodes.12">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5111"
          editPartClassName="WrappingLabel28EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel28ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.23"/>
      </labels>
      <labels
          visualID="5112"
          editPartClassName="WrappingLabel29EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel29ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.24"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3035"
        editPartClassName="MultipleGeneralizationEditPart"
        itemSemanticEditPolicyClassName="MultipleGeneralizationItemSemanticEditPolicy"
        notationViewFactoryClassName="MultipleGeneralizationViewFactory"
        canonicalEditPolicyClassName="MultipleGeneralizationCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.15"
        graphicalNodeEditPolicyClassName="MultipleGeneralizationGraphicalNodeEditPolicy"
        createCommandClassName="MultipleGeneralizationCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="MultipleGeneralizationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="MultipleGeneralizationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class MultipleGeneralizationFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMultipleGeneralisationNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMultipleGeneralisationSubtitleFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public MultipleGeneralizationFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 0;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureMultipleGeneralisationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMultipleGeneralisationNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureMultipleGeneralisationNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureMultipleGeneralisationNameFigure.setFont(FFIGUREMULTIPLEGENERALISATIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMultipleGeneralisationNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMultipleGeneralisationNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMultipleGeneralisationNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMultipleGeneralisationNameFigure.horizontalIndent = 0;&#xA;constraintFFigureMultipleGeneralisationNameFigure.horizontalSpan = 1;&#xA;constraintFFigureMultipleGeneralisationNameFigure.verticalSpan = 1;&#xA;constraintFFigureMultipleGeneralisationNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureMultipleGeneralisationNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureMultipleGeneralisationNameFigure, constraintFFigureMultipleGeneralisationNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMultipleGeneralisationSubtitleFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMultipleGeneralisationSubtitleFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureMultipleGeneralisationSubtitleFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureMultipleGeneralisationSubtitleFigure.setFont(FFIGUREMULTIPLEGENERALISATIONSUBTITLEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureMultipleGeneralisationSubtitleFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMultipleGeneralisationSubtitleFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMultipleGeneralisationSubtitleFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMultipleGeneralisationSubtitleFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMultipleGeneralisationSubtitleFigure.horizontalIndent = 0;&#xA;constraintFFigureMultipleGeneralisationSubtitleFigure.horizontalSpan = 1;&#xA;constraintFFigureMultipleGeneralisationSubtitleFigure.verticalSpan = 1;&#xA;constraintFFigureMultipleGeneralisationSubtitleFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMultipleGeneralisationSubtitleFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigureMultipleGeneralisationSubtitleFigure, constraintFFigureMultipleGeneralisationSubtitleFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMultipleGeneralisationNameFigure() {&#xA;&#x9;&#x9;return fFigureMultipleGeneralisationNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMultipleGeneralisationSubtitleFigure() {&#xA;&#x9;&#x9;return fFigureMultipleGeneralisationSubtitleFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMULTIPLEGENERALISATIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMULTIPLEGENERALISATIONSUBTITLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/MultipleGeneralization"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.43">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.44">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5075"
          editPartClassName="MultipleGeneralizationNameEditPart"
          itemSemanticEditPolicyClassName="MultipleGeneralizationNameItemSemanticEditPolicy"
          notationViewFactoryClassName="MultipleGeneralizationNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMultipleGeneralisationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5076"
          editPartClassName="MultipleGeneralizationName2EditPart"
          itemSemanticEditPolicyClassName="MultipleGeneralizationName2ItemSemanticEditPolicy"
          notationViewFactoryClassName="MultipleGeneralizationNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="MultipleGeneralizationExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class MultipleGeneralizationExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMultipleGeneralizationNameExternalFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public MultipleGeneralizationExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMultipleGeneralizationNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureMultipleGeneralizationNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5098"
          editPartClassName="WrappingLabel24EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel24ItemSemanticEditPolicy"
          notationViewFactoryClassName="MultipleGeneralizationLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMultipleGeneralisationSubtitleFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.27"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3047"
        editPartClassName="Renderer8EditPart"
        itemSemanticEditPolicyClassName="Renderer8ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer8CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer8GraphicalNodeEditPolicy"
        createCommandClassName="Renderer8CreateCommand"
        containers="//@diagram/@childNodes.14">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5113"
          editPartClassName="WrappingLabel30EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel30ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.25"/>
      </labels>
      <labels
          visualID="5114"
          editPartClassName="WrappingLabel31EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel31ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.26"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3036"
        editPartClassName="MultipleSpecializationEditPart"
        itemSemanticEditPolicyClassName="MultipleSpecializationItemSemanticEditPolicy"
        notationViewFactoryClassName="MultipleSpecializationViewFactory"
        canonicalEditPolicyClassName="MultipleSpecializationCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.17"
        graphicalNodeEditPolicyClassName="MultipleSpecializationGraphicalNodeEditPolicy"
        createCommandClassName="MultipleSpecializationCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="MultipleSpecializationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="MultipleSpecializationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class MultipleSpecializationFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMultipleSpecialisationNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSetTheoryFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public MultipleSpecializationFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 0;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureMultipleSpecialisationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMultipleSpecialisationNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureMultipleSpecialisationNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureMultipleSpecialisationNameFigure.setFont(FFIGUREMULTIPLESPECIALISATIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureMultipleSpecialisationNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMultipleSpecialisationNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMultipleSpecialisationNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMultipleSpecialisationNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMultipleSpecialisationNameFigure.horizontalIndent = 0;&#xA;constraintFFigureMultipleSpecialisationNameFigure.horizontalSpan = 1;&#xA;constraintFFigureMultipleSpecialisationNameFigure.verticalSpan = 1;&#xA;constraintFFigureMultipleSpecialisationNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureMultipleSpecialisationNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureMultipleSpecialisationNameFigure, constraintFFigureMultipleSpecialisationNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureSetTheoryFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSetTheoryFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureSetTheoryFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureSetTheoryFigure.setFont(FFIGURESETTHEORYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureSetTheoryFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureSetTheoryFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureSetTheoryFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureSetTheoryFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureSetTheoryFigure.horizontalIndent = 0;&#xA;constraintFFigureSetTheoryFigure.horizontalSpan = 1;&#xA;constraintFFigureSetTheoryFigure.verticalSpan = 1;&#xA;constraintFFigureSetTheoryFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureSetTheoryFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle0.add(fFigureSetTheoryFigure, constraintFFigureSetTheoryFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMultipleSpecialisationNameFigure() {&#xA;&#x9;&#x9;return fFigureMultipleSpecialisationNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSetTheoryFigure() {&#xA;&#x9;&#x9;return fFigureSetTheoryFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMULTIPLESPECIALISATIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURESETTHEORYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/MultipleSpecialization"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.48">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.49">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5077"
          editPartClassName="MultipleSpecializationNameEditPart"
          itemSemanticEditPolicyClassName="MultipleSpecializationNameItemSemanticEditPolicy"
          notationViewFactoryClassName="MultipleSpecializationNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMultipleSpecialisationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5078"
          editPartClassName="MultipleSpecializationName2EditPart"
          itemSemanticEditPolicyClassName="MultipleSpecializationName2ItemSemanticEditPolicy"
          notationViewFactoryClassName="MultipleSpecializationNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="MultipleSpecializationExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class MultipleSpecializationExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMultipleSpecializationNameExternalFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public MultipleSpecializationExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMultipleSpecializationNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureMultipleSpecializationNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5079"
          editPartClassName="WrappingLabel27EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel27ItemSemanticEditPolicy"
          notationViewFactoryClassName="MultipleSpecializationLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSetTheoryFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.30"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3048"
        editPartClassName="Renderer9EditPart"
        itemSemanticEditPolicyClassName="Renderer9ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer9CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer9GraphicalNodeEditPolicy"
        createCommandClassName="Renderer9CreateCommand"
        containers="//@diagram/@childNodes.16">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5115"
          editPartClassName="WrappingLabel41EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel41ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.28"/>
      </labels>
      <labels
          visualID="5116"
          editPartClassName="WrappingLabel42EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel42ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.29"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3037"
        editPartClassName="BinaryGeneralizationEditPart"
        itemSemanticEditPolicyClassName="BinaryGeneralizationItemSemanticEditPolicy"
        notationViewFactoryClassName="BinaryGeneralizationViewFactory"
        canonicalEditPolicyClassName="BinaryGeneralizationCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.19"
        graphicalNodeEditPolicyClassName="BinaryGeneralizationGraphicalNodeEditPolicy"
        createCommandClassName="BinaryGeneralizationCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="BinaryGeneralizationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="BinaryGeneralizationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class BinaryGeneralizationFigure extends org.eclipse.draw2d.ScalablePolygonShape {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBinaryGeneralisationNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public BinaryGeneralizationFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout layoutThis = new de.itemis.gmf.runtime.layout.ScaleInnerFigureLayout();&#xA;&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(70)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(80)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(75)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(65)&#xA;));&#xA;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;this.setFill(true);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle0.setFill(false);&#xA;nameRectangle0.setOutline(false);&#xA;&#xA;this.add(nameRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle0.numColumns = 1;&#xA;&#x9;layoutNameRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle0.marginWidth = 0;&#xA;&#x9;layoutNameRectangle0.marginHeight = 0;&#xA;&#x9;nameRectangle0.setLayoutManager(layoutNameRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureBinaryGeneralisationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureBinaryGeneralisationNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureBinaryGeneralisationNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureBinaryGeneralisationNameFigure.setFont(FFIGUREBINARYGENERALISATIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureBinaryGeneralisationNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureBinaryGeneralisationNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureBinaryGeneralisationNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureBinaryGeneralisationNameFigure.horizontalIndent = 0;&#xA;constraintFFigureBinaryGeneralisationNameFigure.horizontalSpan = 1;&#xA;constraintFFigureBinaryGeneralisationNameFigure.verticalSpan = 1;&#xA;constraintFFigureBinaryGeneralisationNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureBinaryGeneralisationNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle0.add(fFigureBinaryGeneralisationNameFigure, constraintFFigureBinaryGeneralisationNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBinaryGeneralisationNameFigure() {&#xA;&#x9;&#x9;return fFigureBinaryGeneralisationNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREBINARYGENERALISATIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="60"
            height="25"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/BinaryGeneralization"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.53">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.54">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5080"
          editPartClassName="BinaryGeneralizationNameEditPart"
          itemSemanticEditPolicyClassName="BinaryGeneralizationNameItemSemanticEditPolicy"
          notationViewFactoryClassName="BinaryGeneralizationNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureBinaryGeneralisationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5081"
          editPartClassName="BinaryGeneralizationName2EditPart"
          itemSemanticEditPolicyClassName="BinaryGeneralizationName2ItemSemanticEditPolicy"
          notationViewFactoryClassName="BinaryGeneralizationNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="BinaryGeneralizationExternalLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class BinaryGeneralizationExternalLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBinaryGeneralizationNameExternalFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public BinaryGeneralizationExternalLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&quot;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBinaryGeneralizationNameExternalFigure() {&#xA;&#x9;&#x9;return fFigureBinaryGeneralizationNameExternalFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3049"
        editPartClassName="Renderer10EditPart"
        itemSemanticEditPolicyClassName="Renderer10ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer10CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer10GraphicalNodeEditPolicy"
        createCommandClassName="Renderer10CreateCommand"
        containers="//@diagram/@childNodes.18">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5117"
          editPartClassName="WrappingLabel43EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel43ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.31"/>
      </labels>
      <labels
          visualID="5118"
          editPartClassName="WrappingLabel44EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel44ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.32"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3054"
        editPartClassName="EntityEditPart"
        itemSemanticEditPolicyClassName="EntityItemSemanticEditPolicy"
        notationViewFactoryClassName="EntityViewFactory"
        canonicalEditPolicyClassName="EntityCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.25"
        compartments="//@diagram/@compartments.5 //@diagram/@compartments.6"
        graphicalNodeEditPolicyClassName="EntityGraphicalNodeEditPolicy"
        createCommandClassName="EntityCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EntityEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntityFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntityFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityAVSFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityPotencyLabel; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntityLevelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntityFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutInnerRectangle0 = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutInnerRectangle0.setStretchMinorAxis(true);&#xA;&#x9;layoutInnerRectangle0.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutInnerRectangle0.setSpacing(0);&#xA;&#x9;layoutInnerRectangle0.setVertical(true);&#xA;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameRectangle1 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameRectangle1.setFill(false);&#xA;nameRectangle1.setOutline(false);&#xA;&#xA;innerRectangle0.add(nameRectangle1);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameRectangle1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameRectangle1.numColumns = 2;&#xA;&#x9;layoutNameRectangle1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutNameRectangle1.horizontalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.verticalSpacing = 0;&#xA;&#x9;layoutNameRectangle1.marginWidth = 3;&#xA;&#x9;layoutNameRectangle1.marginHeight = 0;&#xA;&#x9;nameRectangle1.setLayoutManager(layoutNameRectangle1);&#xA;&#xA;&#xA;&#xA;fFigureEntityNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntityNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityNameFigure.setFont(FFIGUREENTITYNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureEntityNameFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityNameFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityNameFigure.verticalSpan = 4;&#xA;constraintFFigureEntityNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityNameFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureEntityNameFigure, constraintFFigureEntityNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityPotencyLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntityPotencyLabel.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityPotencyLabel.setFont(FFIGUREENTITYPOTENCYLABEL_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityPotencyLabel = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityPotencyLabel.verticalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureEntityPotencyLabel.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityPotencyLabel.horizontalIndent = 0;&#xA;constraintFFigureEntityPotencyLabel.horizontalSpan = 1;&#xA;constraintFFigureEntityPotencyLabel.verticalSpan = 2;&#xA;constraintFFigureEntityPotencyLabel.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityPotencyLabel.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureEntityPotencyLabel, constraintFFigureEntityPotencyLabel);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityLevelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntityLevelFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityLevelFigure.setFont(FFIGUREENTITYLEVELFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityLevelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityLevelFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityLevelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureEntityLevelFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityLevelFigure.horizontalSpan = 1;&#xA;constraintFFigureEntityLevelFigure.verticalSpan = 2;&#xA;constraintFFigureEntityLevelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityLevelFigure.grabExcessVerticalSpace = true;&#xA;nameRectangle1.add(fFigureEntityLevelFigure, constraintFFigureEntityLevelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureEntityAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntityAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureEntityAVSFigure.setFont(FFIGUREENTITYAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEntityAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEntityAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEntityAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureEntityAVSFigure.horizontalSpan = 2;&#xA;constraintFFigureEntityAVSFigure.verticalSpan = 1;&#xA;constraintFFigureEntityAVSFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEntityAVSFigure.grabExcessVerticalSpace = false;&#xA;nameRectangle1.add(fFigureEntityAVSFigure, constraintFFigureEntityAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityNameFigure() {&#xA;&#x9;&#x9;return fFigureEntityNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityAVSFigure() {&#xA;&#x9;&#x9;return fFigureEntityAVSFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityPotencyLabel() {&#xA;&#x9;&#x9;return fFigureEntityPotencyLabel;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntityLevelFigure() {&#xA;&#x9;&#x9;return fFigureEntityLevelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYPOTENCYLABEL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYLEVELFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREENTITYAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Entity"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.57">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.58">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5139"
          editPartClassName="WrappingLabel32EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel32ItemSemanticEditPolicy"
          notationViewFactoryClassName="EntityLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.44"/>
      </labels>
      <labels
          visualID="5140"
          editPartClassName="WrappingLabel33EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel33ItemSemanticEditPolicy"
          notationViewFactoryClassName="EntityLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityPotencyLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.45"/>
      </labels>
      <labels
          visualID="5141"
          editPartClassName="WrappingLabel34EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel34ItemSemanticEditPolicy"
          notationViewFactoryClassName="EntityLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityLevelFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.46"/>
      </labels>
      <labels
          visualID="5142"
          editPartClassName="WrappingLabel35EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel35ItemSemanticEditPolicy"
          notationViewFactoryClassName="EntityLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntityAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.47"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3051"
        editPartClassName="Attribute2EditPart"
        itemSemanticEditPolicyClassName="Attribute2ItemSemanticEditPolicy"
        notationViewFactoryClassName="AttributeViewFactory"
        canonicalEditPolicyClassName="Attribute2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.22"
        graphicalNodeEditPolicyClassName="Attribute2GraphicalNodeEditPolicy"
        createCommandClassName="Attribute2CreateCommand"
        containers="//@diagram/@compartments.5">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.3/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="AttributeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AttributeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDurabilityFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeVariabilityFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDataTypeFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAttributeDefaultValueFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AttributeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left1 = new org.eclipse.draw2d.RectangleFigure();&#xA;left1.setFill(false);&#xA;left1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintLeft1.horizontalIndent = 0;&#xA;constraintLeft1.horizontalSpan = 1;&#xA;constraintLeft1.verticalSpan = 1;&#xA;constraintLeft1.grabExcessHorizontalSpace = false;&#xA;constraintLeft1.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(left1, constraintLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLeft1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLeft1.numColumns = 2;&#xA;&#x9;layoutLeft1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutLeft1.horizontalSpacing = 0;&#xA;&#x9;layoutLeft1.verticalSpacing = 0;&#xA;&#x9;layoutLeft1.marginWidth = 0;&#xA;&#x9;layoutLeft1.marginHeight = 0;&#xA;&#x9;left1.setLayoutManager(layoutLeft1);&#xA;&#xA;&#xA;&#xA;fFigureAttributeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeNameFigure.setFont(FFIGUREATTRIBUTENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeNameFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeNameFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeNameFigure.verticalSpan = 4;&#xA;constraintFFigureAttributeNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeNameFigure.grabExcessVerticalSpace = true;&#xA;left1.add(fFigureAttributeNameFigure, constraintFFigureAttributeNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDurabilityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeDurabilityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDurabilityFigure.setFont(FFIGUREATTRIBUTEDURABILITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDurabilityFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDurabilityFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDurabilityFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDurabilityFigure.verticalSpan = 2;&#xA;constraintFFigureAttributeDurabilityFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDurabilityFigure.grabExcessVerticalSpace = true;&#xA;left1.add(fFigureAttributeDurabilityFigure, constraintFFigureAttributeDurabilityFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeVariabilityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeVariabilityFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeVariabilityFigure.setFont(FFIGUREATTRIBUTEVARIABILITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeVariabilityFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeVariabilityFigure.verticalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeVariabilityFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeVariabilityFigure.verticalSpan = 2;&#xA;constraintFFigureAttributeVariabilityFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeVariabilityFigure.grabExcessVerticalSpace = true;&#xA;left1.add(fFigureAttributeVariabilityFigure, constraintFFigureAttributeVariabilityFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right1 = new org.eclipse.draw2d.RectangleFigure();&#xA;right1.setFill(false);&#xA;right1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight1.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintRight1.horizontalIndent = 0;&#xA;constraintRight1.horizontalSpan = 1;&#xA;constraintRight1.verticalSpan = 1;&#xA;constraintRight1.grabExcessHorizontalSpace = true;&#xA;constraintRight1.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(right1, constraintRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight1.numColumns = 2;&#xA;&#x9;layoutRight1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight1.horizontalSpacing = 0;&#xA;&#x9;layoutRight1.verticalSpacing = 0;&#xA;&#x9;layoutRight1.marginWidth = 0;&#xA;&#x9;layoutRight1.marginHeight = 0;&#xA;&#x9;right1.setLayoutManager(layoutRight1);&#xA;&#xA;&#xA;&#xA;fFigureAttributeDataTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeDataTypeFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDataTypeFigure.setFont(FFIGUREATTRIBUTEDATATYPEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDataTypeFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDataTypeFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDataTypeFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDataTypeFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDataTypeFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureAttributeDataTypeFigure.grabExcessVerticalSpace = false;&#xA;right1.add(fFigureAttributeDataTypeFigure, constraintFFigureAttributeDataTypeFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAttributeDefaultValueFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAttributeDefaultValueFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureAttributeDefaultValueFigure.setFont(FFIGUREATTRIBUTEDEFAULTVALUEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAttributeDefaultValueFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAttributeDefaultValueFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalIndent = 0;&#xA;constraintFFigureAttributeDefaultValueFigure.horizontalSpan = 1;&#xA;constraintFFigureAttributeDefaultValueFigure.verticalSpan = 1;&#xA;constraintFFigureAttributeDefaultValueFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAttributeDefaultValueFigure.grabExcessVerticalSpace = false;&#xA;right1.add(fFigureAttributeDefaultValueFigure, constraintFFigureAttributeDefaultValueFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeNameFigure() {&#xA;&#x9;&#x9;return fFigureAttributeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDurabilityFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDurabilityFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeVariabilityFigure() {&#xA;&#x9;&#x9;return fFigureAttributeVariabilityFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDataTypeFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDataTypeFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAttributeDefaultValueFigure() {&#xA;&#x9;&#x9;return fFigureAttributeDefaultValueFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDURABILITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEVARIABILITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDATATYPEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREATTRIBUTEDEFAULTVALUEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Clabject/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Clabject/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.59">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.60">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5125"
          editPartClassName="AttributeName2EditPart"
          itemSemanticEditPolicyClassName="AttributeName2ItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4"
            viewPattern="">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5126"
          editPartClassName="WrappingLabel36EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel36ItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDurabilityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.35"/>
      </labels>
      <labels
          visualID="5127"
          editPartClassName="WrappingLabel37EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel37ItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeVariabilityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute/valueVariability"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5128"
          editPartClassName="AttributeValue2EditPart"
          itemSemanticEditPolicyClassName="AttributeValue2ItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeValueViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDataTypeFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.36"/>
      </labels>
      <labels
          visualID="5151"
          editPartClassName="AttributeValue3EditPart"
          itemSemanticEditPolicyClassName="AttributeValue3ItemSemanticEditPolicy"
          notationViewFactoryClassName="AttributeValueViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAttributeDefaultValueFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4"
            viewPattern="= {0}">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute/value"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3055"
        editPartClassName="Renderer11EditPart"
        itemSemanticEditPolicyClassName="Renderer11ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer11CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer11GraphicalNodeEditPolicy"
        createCommandClassName="Renderer11CreateCommand"
        containers="//@diagram/@childNodes.21">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5143"
          editPartClassName="WrappingLabel47EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel47ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.33"/>
      </labels>
      <labels
          visualID="5144"
          editPartClassName="WrappingLabel48EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel48ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.34"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3052"
        editPartClassName="Method2EditPart"
        itemSemanticEditPolicyClassName="Method2ItemSemanticEditPolicy"
        notationViewFactoryClassName="MethodViewFactory"
        canonicalEditPolicyClassName="Method2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.24"
        graphicalNodeEditPolicyClassName="Method2GraphicalNodeEditPolicy"
        createCommandClassName="Method2CreateCommand"
        containers="//@diagram/@compartments.6">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.5/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="MethodFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class MethodFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodPotencyFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodOutputFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureMethodInputFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public MethodFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 4;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureMethodNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMethodNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodNameFigure.setFont(FFIGUREMETHODNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodNameFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodNameFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodNameFigure.verticalSpan = 1;&#xA;constraintFFigureMethodNameFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodNameFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodNameFigure, constraintFFigureMethodNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMethodPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodPotencyFigure.setFont(FFIGUREMETHODPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureMethodPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureMethodPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodPotencyFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodPotencyFigure, constraintFFigureMethodPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodInputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMethodInputFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodInputFigure.setFont(FFIGUREMETHODINPUTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodInputFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodInputFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodInputFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodInputFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodInputFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodInputFigure.verticalSpan = 1;&#xA;constraintFFigureMethodInputFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodInputFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodInputFigure, constraintFFigureMethodInputFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureMethodOutputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureMethodOutputFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureMethodOutputFigure.setFont(FFIGUREMETHODOUTPUTFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureMethodOutputFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureMethodOutputFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureMethodOutputFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureMethodOutputFigure.horizontalIndent = 0;&#xA;constraintFFigureMethodOutputFigure.horizontalSpan = 1;&#xA;constraintFFigureMethodOutputFigure.verticalSpan = 1;&#xA;constraintFFigureMethodOutputFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureMethodOutputFigure.grabExcessVerticalSpace = false;&#xA;innerRectangle0.add(fFigureMethodOutputFigure, constraintFFigureMethodOutputFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodNameFigure() {&#xA;&#x9;&#x9;return fFigureMethodNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodPotencyFigure() {&#xA;&#x9;&#x9;return fFigureMethodPotencyFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodOutputFigure() {&#xA;&#x9;&#x9;return fFigureMethodOutputFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureMethodInputFigure() {&#xA;&#x9;&#x9;return fFigureMethodInputFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODINPUTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREMETHODOUTPUTFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Method"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Clabject/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Clabject/children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.65">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.66">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5130"
          editPartClassName="MethodName2EditPart"
          itemSemanticEditPolicyClassName="MethodName2ItemSemanticEditPolicy"
          notationViewFactoryClassName="MethodNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5131"
          editPartClassName="WrappingLabel38EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel38ItemSemanticEditPolicy"
          notationViewFactoryClassName="MethodLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodInputFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.39"/>
      </labels>
      <labels
          visualID="5132"
          editPartClassName="WrappingLabel39EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel39ItemSemanticEditPolicy"
          notationViewFactoryClassName="MethodLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.40"/>
      </labels>
      <labels
          visualID="5133"
          editPartClassName="WrappingLabel40EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel40ItemSemanticEditPolicy"
          notationViewFactoryClassName="MethodLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureMethodOutputFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.41"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3056"
        editPartClassName="Renderer12EditPart"
        itemSemanticEditPolicyClassName="Renderer12ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer12CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer12GraphicalNodeEditPolicy"
        createCommandClassName="Renderer12CreateCommand"
        containers="//@diagram/@childNodes.23">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5145"
          editPartClassName="WrappingLabel49EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel49ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.37"/>
      </labels>
      <labels
          visualID="5146"
          editPartClassName="WrappingLabel50EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel50ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.38"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3057"
        editPartClassName="Renderer13EditPart"
        itemSemanticEditPolicyClassName="Renderer13ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer13CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer13GraphicalNodeEditPolicy"
        createCommandClassName="Renderer13CreateCommand"
        containers="//@diagram/@childNodes.20">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5147"
          editPartClassName="WrappingLabel51EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel51ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.42"/>
      </labels>
      <labels
          visualID="5148"
          editPartClassName="WrappingLabel52EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel52ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.43"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3058"
        editPartClassName="Renderer14EditPart"
        itemSemanticEditPolicyClassName="Renderer14ItemSemanticEditPolicy"
        notationViewFactoryClassName="RendererViewFactory"
        canonicalEditPolicyClassName="Renderer14CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Renderer14GraphicalNodeEditPolicy"
        createCommandClassName="Renderer14CreateCommand"
        containers="//@diagram/@topLevelNodes.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RendererFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererAttributeValueFigureFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRendererPotencyFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_TOPLEFT&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangle0.setFill(false);&#xA;innerRectangle0.setOutline(false);&#xA;innerRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(22)&#xA;));&#xA;&#xA;this.add(innerRectangle0);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutInnerRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutInnerRectangle0.numColumns = 2;&#xA;&#x9;layoutInnerRectangle0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutInnerRectangle0.horizontalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.verticalSpacing = 0;&#xA;&#x9;layoutInnerRectangle0.marginWidth = 3;&#xA;&#x9;layoutInnerRectangle0.marginHeight = 0;&#xA;&#x9;innerRectangle0.setLayoutManager(layoutInnerRectangle0);&#xA;&#xA;&#xA;&#xA;fFigureRendererAttributeValueFigureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererAttributeValueFigureFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererAttributeValueFigureFigure.setFont(FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererAttributeValueFigureFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererAttributeValueFigureFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.verticalSpan = 1;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererAttributeValueFigureFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererAttributeValueFigureFigure, constraintFFigureRendererAttributeValueFigureFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRendererPotencyFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureRendererPotencyFigure.setFont(FFIGURERENDERERPOTENCYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureRendererPotencyFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureRendererPotencyFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureRendererPotencyFigure.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureRendererPotencyFigure.horizontalIndent = 0;&#xA;constraintFFigureRendererPotencyFigure.horizontalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.verticalSpan = 1;&#xA;constraintFFigureRendererPotencyFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureRendererPotencyFigure.grabExcessVerticalSpace = true;&#xA;innerRectangle0.add(fFigureRendererPotencyFigure, constraintFFigureRendererPotencyFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererAttributeValueFigureFigure() {&#xA;&#x9;&#x9;return fFigureRendererAttributeValueFigureFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRendererPotencyFigure() {&#xA;&#x9;&#x9;return fFigureRendererPotencyFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERATTRIBUTEVALUEFIGUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURERENDERERPOTENCYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 7, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="0"
            height="22"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
      </modelFacet>
      <labels
          visualID="5149"
          editPartClassName="WrappingLabel53EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel53ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererAttributeValueFigureFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.49"/>
      </labels>
      <labels
          visualID="5150"
          editPartClassName="WrappingLabel54EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel54ItemSemanticEditPolicy"
          notationViewFactoryClassName="RendererLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRendererPotencyFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.50"/>
      </labels>
    </childNodes>
    <topLevelNodes
        visualID="2002"
        editPartClassName="OntologyEditPart"
        itemSemanticEditPolicyClassName="OntologyItemSemanticEditPolicy"
        notationViewFactoryClassName="OntologyViewFactory"
        canonicalEditPolicyClassName="OntologyCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.26"
        compartments="//@diagram/@compartments.0"
        graphicalNodeEditPolicyClassName="OntologyGraphicalNodeEditPolicy"
        createCommandClassName="OntologyCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="OntologyEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="OntologyFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OntologyFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureOntologyNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureOntologyAVSFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OntologyFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(500)&#xA;, getMapMode().DPtoLP(350)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure innerRectangel0 = new org.eclipse.draw2d.RectangleFigure();&#xA;innerRectangel0.setFill(false);&#xA;innerRectangel0.setOutline(false);&#xA;innerRectangel0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(50)&#xA;));&#xA;&#xA;this.add(innerRectangel0);&#xA;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutInnerRectangel0 = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutInnerRectangel0.setStretchMinorAxis(true);&#xA;&#x9;layoutInnerRectangel0.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutInnerRectangel0.setSpacing(0);&#xA;&#x9;layoutInnerRectangel0.setVertical(true);&#xA;&#xA;&#x9;innerRectangel0.setLayoutManager(layoutInnerRectangel0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure nameArea1 = new org.eclipse.draw2d.RectangleFigure();&#xA;nameArea1.setFill(false);&#xA;nameArea1.setOutline(false);&#xA;&#xA;innerRectangel0.add(nameArea1);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutNameArea1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutNameArea1.numColumns = 1;&#xA;&#x9;layoutNameArea1.makeColumnsEqualWidth = true;&#xA;&#x9;layoutNameArea1.horizontalSpacing = 0;&#xA;&#x9;layoutNameArea1.verticalSpacing = 0;&#xA;&#x9;layoutNameArea1.marginWidth = 3;&#xA;&#x9;layoutNameArea1.marginHeight = 0;&#xA;&#x9;nameArea1.setLayoutManager(layoutNameArea1);&#xA;&#xA;&#xA;&#xA;fFigureOntologyNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureOntologyNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureOntologyNameFigure.setFont(FFIGUREONTOLOGYNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureOntologyNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureOntologyNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureOntologyNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureOntologyNameFigure.horizontalIndent = 0;&#xA;constraintFFigureOntologyNameFigure.horizontalSpan = 1;&#xA;constraintFFigureOntologyNameFigure.verticalSpan = 1;&#xA;constraintFFigureOntologyNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureOntologyNameFigure.grabExcessVerticalSpace = true;&#xA;nameArea1.add(fFigureOntologyNameFigure, constraintFFigureOntologyNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureOntologyAVSFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureOntologyAVSFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureOntologyAVSFigure.setFont(FFIGUREONTOLOGYAVSFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureOntologyAVSFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureOntologyAVSFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureOntologyAVSFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureOntologyAVSFigure.horizontalIndent = 0;&#xA;constraintFFigureOntologyAVSFigure.horizontalSpan = 1;&#xA;constraintFFigureOntologyAVSFigure.verticalSpan = 1;&#xA;constraintFFigureOntologyAVSFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureOntologyAVSFigure.grabExcessVerticalSpace = true;&#xA;nameArea1.add(fFigureOntologyAVSFigure, constraintFFigureOntologyAVSFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureOntologyNameFigure() {&#xA;&#x9;&#x9;return fFigureOntologyNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureOntologyAVSFigure() {&#xA;&#x9;&#x9;return fFigureOntologyAVSFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREONTOLOGYNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREONTOLOGYAVSFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="500"
            height="350"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Ontology"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/LMLModel/elements"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/LMLModel/elements"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenReferenceNewElementSpec">
            <feature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/renderer"/>
            <newElementInitializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.0">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/attributes"/>
              </initializers>
              <initializers
                  xsi:type="gmfgen:GenFeatureValueSpec"
                  value="//@expressionProviders/@providers.0/@expressions.1">
                <feature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer/durability"/>
              </initializers>
            </newElementInitializers>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5008"
          editPartClassName="OntologyNameEditPart"
          itemSemanticEditPolicyClassName="OntologyNameItemSemanticEditPolicy"
          notationViewFactoryClassName="OntologyNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureOntologyNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.4">
          <metaFeatures
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Element/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5096"
          editPartClassName="WrappingLabelEditPart"
          itemSemanticEditPolicyClassName="WrappingLabelItemSemanticEditPolicy"
          notationViewFactoryClassName="OntologyLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureOntologyAVSFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:ExpressionLabelModelFacet"
            parser="//@labelParsers/@implementations.51"/>
      </labels>
    </topLevelNodes>
    <links
        visualID="4021"
        editPartClassName="ConnectionParticipantEditPart"
        itemSemanticEditPolicyClassName="ConnectionParticipantItemSemanticEditPolicy"
        notationViewFactoryClassName="ConnectionParticipantViewFactory"
        createCommandClassName="ConnectionParticipantCreateCommand"
        reorientCommandClassName="ConnectionParticipantReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ConnectionParticipantsFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionParticipantsFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionParticipantsNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConnectionParticipantsMultiplicityFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionParticipantsFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureConnectionParticipantsNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureConnectionParticipantsNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureConnectionParticipantsNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureConnectionParticipantsNameFigure.setFont(FFIGURECONNECTIONPARTICIPANTSNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fFigureConnectionParticipantsNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureConnectionParticipantsMultiplicityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureConnectionParticipantsMultiplicityFigure.setText(&quot;0..*&quot;);&#xA;&#xA;fFigureConnectionParticipantsMultiplicityFigure.setFont(FFIGURECONNECTIONPARTICIPANTSMULTIPLICITYFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fFigureConnectionParticipantsMultiplicityFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionParticipantsNameFigure() {&#xA;&#x9;&#x9;return fFigureConnectionParticipantsNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConnectionParticipantsMultiplicityFigure() {&#xA;&#x9;&#x9;return fFigureConnectionParticipantsMultiplicityFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPARTICIPANTSNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONNECTIONPARTICIPANTSMULTIPLICITYFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection/participant"/>
      </modelFacet>
      <labels
          visualID="6004"
          editPartClassName="WrappingLabel45EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel45ItemSemanticEditPolicy"
          notationViewFactoryClassName="ConnectionParticipantLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionParticipantsNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"
              fixedForeground="true"/>
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.20"/>
      </labels>
      <labels
          visualID="6005"
          editPartClassName="WrappingLabel46EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel46ItemSemanticEditPolicy"
          notationViewFactoryClassName="ConnectionParticipantLabelViewFactory"
          readOnly="true"
          alignment="SOURCE">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConnectionParticipantsMultiplicityFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="60"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.20"/>
      </labels>
    </links>
    <links
        visualID="4002"
        editPartClassName="InstantiationEditPart"
        itemSemanticEditPolicyClassName="InstantiationItemSemanticEditPolicy"
        notationViewFactoryClassName="InstantiationViewFactory"
        createCommandClassName="InstantiationCreateCommand"
        reorientCommandClassName="InstantiationReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="InstantiationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="InstantiationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InstantiationFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InstantiationFigure() {&#xA;&#x9;&#x9;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DASH);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Instantiation"/>
        <containmentMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <childMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model/children"/>
        <sourceMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Instantiation/instance"/>
        <targetMetaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Instantiation/type"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.82"
          targetEnd="//@expressionProviders/@providers.0/@expressions.83"/>
    </links>
    <links
        visualID="4013"
        editPartClassName="SetRelationshipBaseEditPart"
        itemSemanticEditPolicyClassName="SetRelationshipBaseItemSemanticEditPolicy"
        notationViewFactoryClassName="SetRelationshipBaseViewFactory"
        createCommandClassName="SetRelationshipBaseCreateCommand"
        reorientCommandClassName="SetRelationshipBaseReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SetRelationshipLinkFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SetRelationshipLinkFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SetRelationshipLinkFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/SetRelationship/base"/>
      </modelFacet>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.84"/>
    </links>
    <links
        visualID="4018"
        editPartClassName="EqualityEqualEditPart"
        itemSemanticEditPolicyClassName="EqualityEqualItemSemanticEditPolicy"
        notationViewFactoryClassName="EqualityEqualViewFactory"
        createCommandClassName="EqualityEqualCreateCommand"
        reorientCommandClassName="EqualityEqualReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SetRelationshipLinkFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SetRelationshipLinkFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SetRelationshipLinkFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Equality/equal"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.85"
          targetEnd="//@expressionProviders/@providers.0/@expressions.86"/>
    </links>
    <links
        visualID="4015"
        editPartClassName="InversionInverseEditPart"
        itemSemanticEditPolicyClassName="InversionInverseItemSemanticEditPolicy"
        notationViewFactoryClassName="InversionInverseViewFactory"
        createCommandClassName="InversionInverseCreateCommand"
        reorientCommandClassName="InversionInverseReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SetRelationshipLinkFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SetRelationshipLinkFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SetRelationshipLinkFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Inversion/inverse"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.87"
          targetEnd="//@expressionProviders/@providers.0/@expressions.88"/>
    </links>
    <links
        visualID="4016"
        editPartClassName="ComplementComplementEditPart"
        itemSemanticEditPolicyClassName="ComplementComplementItemSemanticEditPolicy"
        notationViewFactoryClassName="ComplementComplementViewFactory"
        createCommandClassName="ComplementComplementCreateCommand"
        reorientCommandClassName="ComplementComplementReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SetRelationshipLinkFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SetRelationshipLinkFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SetRelationshipLinkFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Complement/complement"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.89"
          targetEnd="//@expressionProviders/@providers.0/@expressions.90"/>
    </links>
    <links
        visualID="4008"
        editPartClassName="MultipleGeneralizationSupertypeEditPart"
        itemSemanticEditPolicyClassName="MultipleGeneralizationSupertypeItemSemanticEditPolicy"
        notationViewFactoryClassName="MultipleGeneralizationSupertypeViewFactory"
        createCommandClassName="MultipleGeneralizationSupertypeCreateCommand"
        reorientCommandClassName="MultipleGeneralizationSupertypeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SuperTypeConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SuperTypeConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SuperTypeConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/MultipleGeneralization/supertype"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.91"/>
    </links>
    <links
        visualID="4009"
        editPartClassName="MultipleGeneralizationSubtypeEditPart"
        itemSemanticEditPolicyClassName="MultipleGeneralizationSubtypeItemSemanticEditPolicy"
        notationViewFactoryClassName="MultipleGeneralizationSubtypeViewFactory"
        createCommandClassName="MultipleGeneralizationSubtypeCreateCommand"
        reorientCommandClassName="MultipleGeneralizationSubtypeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubTypeConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubTypeConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubTypeConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/MultipleGeneralization/subtype"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.92"/>
    </links>
    <links
        visualID="4011"
        editPartClassName="MultipleSpecializationSupertypeEditPart"
        itemSemanticEditPolicyClassName="MultipleSpecializationSupertypeItemSemanticEditPolicy"
        notationViewFactoryClassName="MultipleSpecializationSupertypeViewFactory"
        createCommandClassName="MultipleSpecializationSupertypeCreateCommand"
        reorientCommandClassName="MultipleSpecializationSupertypeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SuperTypeConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SuperTypeConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SuperTypeConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/MultipleSpecialization/supertype"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.93"/>
    </links>
    <links
        visualID="4012"
        editPartClassName="MultipleSpecializationSubtypeEditPart"
        itemSemanticEditPolicyClassName="MultipleSpecializationSubtypeItemSemanticEditPolicy"
        notationViewFactoryClassName="MultipleSpecializationSubtypeViewFactory"
        createCommandClassName="MultipleSpecializationSubtypeCreateCommand"
        reorientCommandClassName="MultipleSpecializationSubtypeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubTypeConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubTypeConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubTypeConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/MultipleSpecialization/subtype"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.94"/>
    </links>
    <links
        visualID="4019"
        editPartClassName="BinaryGeneralizationSupertypeEditPart"
        itemSemanticEditPolicyClassName="BinaryGeneralizationSupertypeItemSemanticEditPolicy"
        notationViewFactoryClassName="BinaryGeneralizationSupertypeViewFactory"
        createCommandClassName="BinaryGeneralizationSupertypeCreateCommand"
        reorientCommandClassName="BinaryGeneralizationSupertypeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SuperTypeConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SuperTypeConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SuperTypeConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/BinaryGeneralization/supertype"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.95"/>
    </links>
    <links
        visualID="4020"
        editPartClassName="BinaryGeneralizationSubtypeEditPart"
        itemSemanticEditPolicyClassName="BinaryGeneralizationSubtypeItemSemanticEditPolicy"
        notationViewFactoryClassName="BinaryGeneralizationSubtypeViewFactory"
        createCommandClassName="BinaryGeneralizationSubtypeCreateCommand"
        reorientCommandClassName="BinaryGeneralizationSubtypeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubTypeConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubTypeConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubTypeConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/BinaryGeneralization/subtype"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.96"/>
    </links>
    <compartments
        visualID="7003"
        editPartClassName="OntologyModelCompartmentEditPart"
        itemSemanticEditPolicyClassName="OntologyModelCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="OntologyModelCompartmentViewFactory"
        canonicalEditPolicyClassName="OntologyModelCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0"
        title="ModelCompartment"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:FigureViewmap"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <compartments
        visualID="7017"
        editPartClassName="ModelDomainElementsCompartmentEditPart"
        itemSemanticEditPolicyClassName="ModelDomainElementsCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="ModelDomainElementsCompartmentViewFactory"
        canonicalEditPolicyClassName="ModelDomainElementsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.2 //@diagram/@childNodes.8 //@diagram/@childNodes.10 //@diagram/@childNodes.12 //@diagram/@childNodes.14 //@diagram/@childNodes.16 //@diagram/@childNodes.18 //@diagram/@childNodes.20"
        title="DomainElementsCompartment"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@childNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="DomainElementsCompartmentFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class DomainElementsCompartmentFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public DomainElementsCompartmentFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <compartments
        visualID="7022"
        editPartClassName="ConnectionDomainConnectionsFieldsCompartmentEditPart"
        itemSemanticEditPolicyClassName="ConnectionDomainConnectionsFieldsCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="ConnectionDomainConnectionsFieldsCompartmentViewFactory"
        canonicalEditPolicyClassName="ConnectionDomainConnectionsFieldsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.3"
        title="AttributesCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntityCompartmentFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntityCompartmentFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntityCompartmentFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <compartments
        visualID="7023"
        editPartClassName="ConnectionDomainConnectionsMethodsCompartmentEditPart"
        itemSemanticEditPolicyClassName="ConnectionDomainConnectionsMethodsCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="ConnectionDomainConnectionsMethodsCompartmentViewFactory"
        canonicalEditPolicyClassName="ConnectionDomainConnectionsMethodsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.5"
        title="MethodsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntityCompartmentFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntityCompartmentFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntityCompartmentFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <compartments
        visualID="7026"
        editPartClassName="ConnectionRenderersCompartmentEditPart"
        itemSemanticEditPolicyClassName="ConnectionRenderersCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="ConnectionRenderersCompartmentViewFactory"
        canonicalEditPolicyClassName="ConnectionRenderersCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.7"
        title="RenderersCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RendererCompartmentFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RendererCompartmentFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RendererCompartmentFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <compartments
        visualID="7024"
        editPartClassName="EntityDomainEntityFieldsCompartmentEditPart"
        itemSemanticEditPolicyClassName="EntityDomainEntityFieldsCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="EntityDomainEntityFieldsCompartmentViewFactory"
        canonicalEditPolicyClassName="EntityDomainEntityFieldsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.21"
        title="AttributesCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.20">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntityCompartmentFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntityCompartmentFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntityCompartmentFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <compartments
        visualID="7025"
        editPartClassName="EntityDomainEntityMethodsCompartmentEditPart"
        itemSemanticEditPolicyClassName="EntityDomainEntityMethodsCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="EntityDomainEntityMethodsCompartmentViewFactory"
        canonicalEditPolicyClassName="EntityDomainEntityMethodsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.23"
        title="MethodsCompartment"
        needsTitle="false"
        node="//@diagram/@childNodes.20">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntityCompartmentFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntityCompartmentFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntityCompartmentFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <palette>
      <groups
          title="Containers"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Ontology"
            description="Create new Ontology"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/ontology16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/ontology16.gif"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Model"
            description="Create new Model"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/model16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/model16.gif"
            genNodes="//@diagram/@childNodes.0"/>
      </groups>
      <groups
          title="Domain Elements"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Entity"
            description="Create new Entity"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/clabject16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/clabject16.gif"
            genNodes="//@diagram/@childNodes.20"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Connection"
            description="Create new Connection"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/domainConnection16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/domainConnection16.gif"
            genNodes="//@diagram/@childNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Connection Participant"
            description="Create new Connection Participant"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/domainConnectionParticipant16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/domainConnectionParticipant16.gif"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Attribute"
            description="Create new Attribute"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/field16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/field16.gif"
            genNodes="//@diagram/@childNodes.3 //@diagram/@childNodes.21"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Method"
            description="Create new Method"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/method16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/method16.gif"
            genNodes="//@diagram/@childNodes.5 //@diagram/@childNodes.23"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Renderer"
            description="Creates a new Renderer"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/renderer16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/renderer16.gif"
            genNodes="//@diagram/@childNodes.1 //@diagram/@childNodes.4 //@diagram/@childNodes.6 //@diagram/@childNodes.7 //@diagram/@childNodes.9 //@diagram/@childNodes.11 //@diagram/@childNodes.13 //@diagram/@childNodes.15 //@diagram/@childNodes.17 //@diagram/@childNodes.19 //@diagram/@childNodes.22 //@diagram/@childNodes.24 //@diagram/@childNodes.25 //@diagram/@childNodes.26"/>
      </groups>
      <groups
          title="Connections"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Instantiation"
            description="Create new Instantiation"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/instantiation16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/instantiation16.gif"
            genLinks="//@diagram/@links.1"/>
      </groups>
      <groups
          title="Set Relationships"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Complement"
            description="Create new Complement"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationship16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationship16.gif"
            genNodes="//@diagram/@childNodes.8"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Equal"
            description="Create new Equal"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationship16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationship16.gif"
            genNodes="//@diagram/@childNodes.10"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Inversion"
            description="Create new Inversion"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationship16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationship16.gif"
            genNodes="//@diagram/@childNodes.12"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Base"
            description="Create new Set Relation Base"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationshipEnd16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationshipEnd16.gif"
            genLinks="//@diagram/@links.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Target"
            description="Create new Set Relation Target"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationshipEnd16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/setRelationshipEnd16.gif"
            genLinks="//@diagram/@links.3 //@diagram/@links.4 //@diagram/@links.5"/>
      </groups>
      <groups
          title="Generalisations"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Binary Generalization"
            description="Create new Binary Generalization"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/inheritance16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/inheritance16.gif"
            genNodes="//@diagram/@childNodes.18"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Multiple Specialization"
            description="Create new Multiple Specialication"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/inheritance16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/inheritance16.gif"
            genNodes="//@diagram/@childNodes.16"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Multiple Generalization"
            description="Create new Multiple Generalisation"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/inheritance16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/inheritance16.gif"
            genNodes="//@diagram/@childNodes.14"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Supertype"
            description="Create new Supertype"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/superType16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/superType16.gif"
            genLinks="//@diagram/@links.6 //@diagram/@links.8 //@diagram/@links.10"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Subtype"
            description="Create new Subtype"
            largeIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/subType16.gif"
            smallIconPath="/de.uni_mannheim.informatik.swt.gmf.plm/icons/subType16.gif"
            genLinks="//@diagram/@links.7 //@diagram/@links.9 //@diagram/@links.11"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="de.uni_mannheim.informatik.swt.models.plm.diagram.general"
        name="LML Diagram Editor">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="de.uni_mannheim.informatik.swt.models.plm.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="de.uni_mannheim.informatik.swt.models.plm.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="de.uni_mannheim.informatik.swt.models.plm.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="de.uni_mannheim.informatik.swt.models.plm.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin
      name="Level-agnostic Modelling Language (LML) Plugin"
      provider="University of Mannheim: Chair for Software Engineering"
      printingEnabled="true">
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
    <requiredPlugins>de.itemis.gmf.runtime.extensions</requiredPlugins>
    <requiredPlugins>de.uni_mannheim.informatik.swt.gmf.plm</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"
        groupName="Ontologies"
        groupIcon="icons/ontology16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.19"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"
        groupName="Models"
        groupIcon="icons/model16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.4"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.20"
        groupName="Entities"
        groupIcon="icons/clabject16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.20"
        child="//@diagram/@childNodes.17"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.20"
        child="//@diagram/@childNodes.21"
        groupName="Attributes"
        groupIcon="icons/field16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.20"
        child="//@diagram/@childNodes.5"
        groupName="Methods"
        groupIcon="icons/method16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.2"
        groupName="Connections"
        groupIcon="icons/Connection16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.1"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.3"
        groupName="Attributes"
        groupIcon="icons/field16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.18"
        groupName="Generalizations"
        groupIcon="icons/inheritance16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.18"
        child="//@diagram/@childNodes.15"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.14"
        groupName="Generalizations"
        groupIcon="icons/inheritance16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.14"
        child="//@diagram/@childNodes.11"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.16"
        groupName="Generalizations"
        groupIcon="icons/inheritance16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.16"
        child="//@diagram/@childNodes.13"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.8"
        groupName="Set Relationships"
        groupIcon="icons/setRelationship16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@childNodes.6"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.10"
        groupName="Set Relationships"
        groupIcon="icons/setRelationship16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.10"
        child="//@diagram/@childNodes.7"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@childNodes.12"
        groupName="Set Relationships"
        groupIcon="icons/setRelationship16.gif"
        hideIfEmpty="false"/>
    <childReferences
        parent="//@diagram/@childNodes.12"
        child="//@diagram/@childNodes.9"
        groupName="Renderers"
        groupIcon="icons/renderer16.gif"
        hideIfEmpty="false"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#/"/>
  <expressionProviders>
    <providers
        xsi:type="gmfgen:GenExpressionInterpreter">
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))"/>
      <expressions
          body="0"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="Sequence{false,false}"/>
      <expressions
          body="Sequence{'',''}"/>
      <expressions
          body="Sequence{0,0}"/>
      <expressions
          body="Sequence{1,1}"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))->append('collapsed= false')"/>
      <expressions
          body="0"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderDurability:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('durability') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('durability') = 'min'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let durability:String = if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (renderDurability) then&#xD;&#xA;&#x9;durability&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="if (not self.datatype.oclIsUndefined()) then&#xD;&#xA;&#x9;':'.concat(self.datatype.name)&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="'('.concat(Sequence{1..input->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let iAsString:String = &#xD;&#xA;&#x9;&#x9;OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(denominator : Integer; s : String = ''|&#xD;&#xA;            &#x9;&#x9;let numberAsString : String = OrderedSet{&#xD;&#xA;                    &#x9;&#x9;'0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                &#x9;}->at(i.div(denominator).mod(10) + 1)&#xD;&#xA;            &#x9;&#x9;in&#xD;&#xA;                &#x9;&#x9;if s='' and numberAsString = '0' then&#xD;&#xA;                    &#x9;&#x9;&#x9;s&#xD;&#xA;                &#x9;&#x9;else&#xD;&#xA;                    &#x9;&#x9;&#x9;s.concat(numberAsString)&#xD;&#xA;                &#x9;&#x9;endif&#xD;&#xA;        &#x9;)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (i &lt;> output->size()) then&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(input->at(i).oclAsType(ecore::EObject).eClass().name).concat(' ').concat(input->at(i).name).concat(', ')&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(input->at(i).oclAsType(ecore::EObject).eClass().name).concat(' ').concat(input->at(i).name)&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;)&#xD;&#xA;).concat(')')"/>
      <expressions
          body="let durability:String = if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="':'.concat(Sequence{1..output->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let iAsString:String = &#xD;&#xA;&#x9;&#x9;OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(denominator : Integer; s : String = ''|&#xD;&#xA;            &#x9;&#x9;let numberAsString : String = OrderedSet{&#xD;&#xA;                    &#x9;&#x9;'0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                &#x9;}->at(i.div(denominator).mod(10) + 1)&#xD;&#xA;            &#x9;&#x9;in&#xD;&#xA;                &#x9;&#x9;if s='' and numberAsString = '0' then&#xD;&#xA;                    &#x9;&#x9;&#x9;s&#xD;&#xA;                &#x9;&#x9;else&#xD;&#xA;                    &#x9;&#x9;&#x9;s.concat(numberAsString)&#xD;&#xA;                &#x9;&#x9;endif&#xD;&#xA;        &#x9;)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (i &lt;> output->size()) then&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(output->at(i).name).concat(', ')&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(output->at(i).name)&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;)&#xD;&#xA;)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'min'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (self.elided) then&#xD;&#xA;&#x9;'...'&#xD;&#xA;else&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;self.name&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('level') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('level') = 'min'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderLevel) then&#xD;&#xA;&#x9;self.level&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('potency') = 'max' &#xD;&#xA;&#x9;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('potency') = 'min'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let potency:String = if (self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderPotency) then&#xD;&#xA;&#x9;potency&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in AVS&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('potency') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('potency') = 'avs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('level') = 'max'&#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('level') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderExpressed:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('expressed')  = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('expressed')  = 'avs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the potency&#xD;&#xA;--**********************************&#xD;&#xA;let potencyString:String = &#xD;&#xA;&#x9;if (renderPotency and self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let potency: String = &#xD;&#xA;&#x9;if (renderPotency) then&#xD;&#xA;&#x9;&#x9;'potency='.concat(potencyString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the level&#xD;&#xA;--**********************************&#xD;&#xA;let levelString:String = &#xD;&#xA;&#x9;if (renderLevel and self.level > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.level.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.level = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let level: String = &#xD;&#xA;&#x9;if (renderLevel) then&#xD;&#xA;&#x9;&#x9;'level='.concat(levelString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the expressed value&#xD;&#xA;--**********************************&#xD;&#xA;let expressedString:String = &#xD;&#xA;&#x9;if (expressed) then&#xD;&#xA;&#x9;&#x9;'true'&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'false'&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let expressed: String = &#xD;&#xA;&#x9;if (renderExpressed) then&#xD;&#xA;&#x9;&#x9;'expressed='.concat(expressedString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat(potency).concat(level).concat(expressed).concat('}')&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))->append('collapsed= false')"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))->append('collapsed= false')"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))->append('collapsed= false')"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))->append('collapsed= false')"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="let intersection:String = &#xD;&#xA;&#x9;if (self.intersection) then &#xD;&#xA;&#x9;&#x9;'intersection;' &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'' &#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let union:String = &#xD;&#xA;&#x9;if (self.union) then &#xD;&#xA;&#x9;&#x9;'union;' &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'' &#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (intersection &lt;> '' or union &lt;> '') then&#xD;&#xA;&#x9;'{'.concat(intersection).concat(union).concat('}')&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))->append('collapsed= false')"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="let disjoint:String = &#xD;&#xA;&#x9;if (self.disjoint) then &#xD;&#xA;&#x9;&#x9;'disjoint;' &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'' &#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let complete:String = &#xD;&#xA;&#x9;if (self.complete) then &#xD;&#xA;&#x9;&#x9;'complete;' &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (disjoint &lt;> '' or complete &lt;> '') then&#xD;&#xA;&#x9;'{'.concat(disjoint).concat(complete ).concat('}')&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))->append('collapsed= false')"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))"/>
      <expressions
          body="0"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderDurability:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('durability') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('durability') = 'min'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let durability:String = if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;if (renderDurability) then&#xD;&#xA;&#x9;durability&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="if (not self.datatype.oclIsUndefined()) then&#xD;&#xA;&#x9;':'.concat(self.datatype.name)&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="self.oclAsType(ecore::EObject).eContainer().eClass().eAllAttributes->collect(a | a.name.concat('= min'))"/>
      <expressions
          body="0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="'('.concat(Sequence{1..input->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let iAsString:String = &#xD;&#xA;&#x9;&#x9;OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(denominator : Integer; s : String = ''|&#xD;&#xA;            &#x9;&#x9;let numberAsString : String = OrderedSet{&#xD;&#xA;                    &#x9;&#x9;'0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                &#x9;}->at(i.div(denominator).mod(10) + 1)&#xD;&#xA;            &#x9;&#x9;in&#xD;&#xA;                &#x9;&#x9;if s='' and numberAsString = '0' then&#xD;&#xA;                    &#x9;&#x9;&#x9;s&#xD;&#xA;                &#x9;&#x9;else&#xD;&#xA;                    &#x9;&#x9;&#x9;s.concat(numberAsString)&#xD;&#xA;                &#x9;&#x9;endif&#xD;&#xA;        &#x9;)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (i &lt;> output->size()) then&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(input->at(i).oclAsType(ecore::EObject).eClass().name).concat(' ').concat(input->at(i).name).concat(', ')&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(input->at(i).oclAsType(ecore::EObject).eClass().name).concat(' ').concat(input->at(i).name)&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;)&#xD;&#xA;).concat(')')"/>
      <expressions
          body="let durability:String = if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="':'.concat(Sequence{1..output->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let iAsString:String = &#xD;&#xA;&#x9;&#x9;OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(denominator : Integer; s : String = ''|&#xD;&#xA;            &#x9;&#x9;let numberAsString : String = OrderedSet{&#xD;&#xA;                    &#x9;&#x9;'0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                &#x9;}->at(i.div(denominator).mod(10) + 1)&#xD;&#xA;            &#x9;&#x9;in&#xD;&#xA;                &#x9;&#x9;if s='' and numberAsString = '0' then&#xD;&#xA;                    &#x9;&#x9;&#x9;s&#xD;&#xA;                &#x9;&#x9;else&#xD;&#xA;                    &#x9;&#x9;&#x9;s.concat(numberAsString)&#xD;&#xA;                &#x9;&#x9;endif&#xD;&#xA;        &#x9;)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (i &lt;> output->size()) then&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(output->at(i).name).concat(', ')&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;str.concat(output->at(i).name)&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;)&#xD;&#xA;)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'min'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (self.elided) then&#xD;&#xA;&#x9;'...'&#xD;&#xA;else&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;self.name&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('potency') = 'max' &#xD;&#xA;&#x9;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('potency') = 'min'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let potency:String = if (self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderPotency) then&#xD;&#xA;&#x9;potency&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('level') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('level') = 'min'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (renderLevel) then&#xD;&#xA;&#x9;self.level&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in AVS&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('potency') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('potency') = 'avs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('level') = 'max'&#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('level') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderExpressed:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('expressed')  = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('expressed')  = 'avs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderShowRenderer:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('showRenderer') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('showRenderer') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the potency&#xD;&#xA;--**********************************&#xD;&#xA;let potencyString:String = &#xD;&#xA;&#x9;if (renderPotency and self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let potency: String = &#xD;&#xA;&#x9;if (renderPotency) then&#xD;&#xA;&#x9;&#x9;'potency='.concat(potencyString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the level&#xD;&#xA;--**********************************&#xD;&#xA;let levelString:String = &#xD;&#xA;&#x9;if (renderLevel and self.level > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.level.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.level = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let level: String = &#xD;&#xA;&#x9;if (renderLevel) then&#xD;&#xA;&#x9;&#x9;'level='.concat(levelString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the expressed value&#xD;&#xA;--**********************************&#xD;&#xA;let expressedString:String = &#xD;&#xA;&#x9;if (expressed) then&#xD;&#xA;&#x9;&#x9;'true'&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'false'&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let expressed: String = &#xD;&#xA;&#x9;if (renderExpressed) then&#xD;&#xA;&#x9;&#x9;'expressed='.concat(expressedString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the showRenderer&#xD;&#xA;--**********************************&#xD;&#xA;let showRenderer : String =&#xD;&#xA;&#x9;if (renderShowRenderer) then&#xD;&#xA;&#x9;&#x9;'showRenderer='.concat(self.showRenderer).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat(potency).concat(level).concat(expressed).concat(showRenderer ).concat('}')&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in AVS&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderCompletness:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('completness') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('completness') = 'avs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderOrigin:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('origin') = 'max'&#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('origin') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderExpressed:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('expressed')  = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('expressed')  = 'avs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderRelevant:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('relevant')  = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('relevant')  = 'avs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderShowRenderer:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('showRenderer')  = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('showRenderer')  = 'avs' &#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the completness&#xD;&#xA;--**********************************&#xD;&#xA;let completness : String =&#xD;&#xA;&#x9;if (renderCompletness) then&#xD;&#xA;&#x9;&#x9;'completness='.concat(self.completness).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the origin value&#xD;&#xA;--**********************************&#xD;&#xA;let origin:String = &#xD;&#xA;&#x9;if (renderCompletness) then&#xD;&#xA;&#x9;&#x9;'origin='.concat(self.origin).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the showRenderer value&#xD;&#xA;--**********************************&#xD;&#xA;let showRenderer:String = &#xD;&#xA;&#x9;if (renderShowRenderer) then&#xD;&#xA;&#x9;&#x9;'ShowRenderer='.concat(self.showRenderer).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the expressed value&#xD;&#xA;--**********************************&#xD;&#xA;let expressedString:String = &#xD;&#xA;&#x9;if (expressed) then&#xD;&#xA;&#x9;&#x9;'true'&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'false'&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let expressed: String = &#xD;&#xA;&#x9;if (renderExpressed) then&#xD;&#xA;&#x9;&#x9;'expressed='.concat(expressedString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the relevant value&#xD;&#xA;--**********************************&#xD;&#xA;let relevantString:String = &#xD;&#xA;&#x9;if (relevant) then&#xD;&#xA;&#x9;&#x9;'true'&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'false'&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let relevant: String = &#xD;&#xA;&#x9;if (renderRelevant) then&#xD;&#xA;&#x9;&#x9;'relevant='.concat(relevantString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat(completness).concat(origin).concat(expressed).concat(relevant).concat(showRenderer).concat('}')&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="'['.concat(Sequence{1..attributes->size()}->iterate(i:Integer; str:String = '' | &#xD;&#xA;&#x9;let currentAttribute:String = &#xD;&#xA;&#x9;&#x9;attributes->at(i)&#xD;&#xA;&#x9;in&#xD;&#xA;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min'&#xD;&#xA;&#x9;&#x9;&#x9;and i &lt;> attributes->size()) then &#xD;&#xA;&#x9;&#x9;&#x9;str.concat(currentAttribute).concat('; ') &#xD;&#xA;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;if (currentAttribute.substring(currentAttribute.size() - 2, currentAttribute.size()) &lt;> 'min') then &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str.concat(currentAttribute) &#xD;&#xA;&#x9;&#x9;&#x9;else &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;str &#xD;&#xA;&#x9;&#x9;&#x9;endif&#xD;&#xA;&#x9;&#x9;endif)&#xD;&#xA;).concat(']')"/>
      <expressions
          body="let durability:String =&#xD;&#xA;&#x9; if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;endif&#x9;&#x9;&#xD;&#xA;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
      <expressions
          body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (self.renderer->size() > 0) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderer:Renderer =&#xD;&#xA;&#x9;if (renderingInformationAvailable)&#x9;then&#xD;&#xA;&#x9;&#x9;self.renderer->first()&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;null&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in AVS&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('name') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderExpressed:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('expressed') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('expressed') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderCompletness:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('completness') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('completness') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderOrigin:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('origin') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('origin') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderShowRenderer:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('showRenderer') = 'max' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;renderer.getValueForKey('showRenderer') = 'avs'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the expressed value&#xD;&#xA;--**********************************&#xD;&#xA;let expressedString:String = &#xD;&#xA;&#x9;if (expressed) then&#xD;&#xA;&#x9;&#x9;'true'&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'false'&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let expressed: String = &#xD;&#xA;&#x9;if (renderExpressed) then&#xD;&#xA;&#x9;&#x9;'expressed='.concat(expressedString).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the completeness&#xD;&#xA;--**********************************&#xD;&#xA;let completness : String =&#xD;&#xA;&#x9;if (renderCompletness) then&#xD;&#xA;&#x9;&#x9;'completeness='.concat(self.completness).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the origin&#xD;&#xA;--**********************************&#xD;&#xA;let origin : String =&#xD;&#xA;&#x9;if (renderOrigin) then&#xD;&#xA;&#x9;&#x9;'origin='.concat(self.origin).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the showRenderer&#xD;&#xA;--**********************************&#xD;&#xA;let showRenderer : String =&#xD;&#xA;&#x9;if (renderShowRenderer) then&#xD;&#xA;&#x9;&#x9;'showRenderer='.concat(self.showRenderer).concat('; ')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat(expressed).concat(completness).concat(origin).concat(showRenderer).concat('}')&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="Instantiation.allInstances()->select(i | i.instance = self)->size() = 0"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.potency &lt;> 0 and self.level &lt; oppositeEnd.level and self.instantiable"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="if (oppositeEnd.oclIsTypeOf(Inversion)) then&#xD;&#xA;&#x9;self.oclIsTypeOf(Connection)&#xD;&#xA;--all other SetRelationships connect Entities&#xD;&#xA;else&#xD;&#xA;&#x9;self.oclIsTypeOf(Entity)&#xD;&#xA;endif"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(Equality)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(Entity)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(Inversion)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(Connection)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(Complement)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(Entity)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(MultipleGeneralization)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(MultipleGeneralization)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(MultipleSpecialization)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(MultipleSpecialization)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(BinaryGeneralization)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.oclIsTypeOf(BinaryGeneralization)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.name.size() > 0"/>
    </providers>
  </expressionProviders>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.1/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5099"
        viewExpression="//@expressionProviders/@providers.0/@expressions.4">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.1/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5100"
        viewExpression="//@expressionProviders/@providers.0/@expressions.5">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.4/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5101"
        viewExpression="//@expressionProviders/@providers.0/@expressions.14">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.4/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5102"
        viewExpression="//@expressionProviders/@providers.0/@expressions.15">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.3/@labels.0/@modelFacet //@diagram/@childNodes.3/@labels.2/@modelFacet //@diagram/@childNodes.3/@labels.4/@modelFacet //@diagram/@childNodes.5/@labels.0/@modelFacet //@diagram/@childNodes.2/@labels.1/@modelFacet //@diagram/@childNodes.10/@labels.0/@modelFacet //@diagram/@childNodes.14/@labels.0/@modelFacet //@diagram/@childNodes.14/@labels.1/@modelFacet //@diagram/@childNodes.16/@labels.0/@modelFacet //@diagram/@childNodes.16/@labels.1/@modelFacet //@diagram/@childNodes.18/@labels.0/@modelFacet //@diagram/@childNodes.18/@labels.1/@modelFacet //@diagram/@childNodes.21/@labels.0/@modelFacet //@diagram/@childNodes.21/@labels.2/@modelFacet //@diagram/@childNodes.21/@labels.4/@modelFacet //@diagram/@childNodes.23/@labels.0/@modelFacet //@diagram/@childNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.0/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.3/@labels.1/@modelFacet"
        className="AttributeLabelExpressionLabelParser5122"
        viewExpression="//@expressionProviders/@providers.0/@expressions.16">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.3/@labels.3/@modelFacet"
        className="AttributeLabelExpressionLabelParser5124"
        viewExpression="//@expressionProviders/@providers.0/@expressions.17">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.6/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5103"
        viewExpression="//@expressionProviders/@providers.0/@expressions.20">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.6/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5104"
        viewExpression="//@expressionProviders/@providers.0/@expressions.21">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.5/@labels.1/@modelFacet"
        className="MethodLabelExpressionLabelParser5042"
        viewExpression="//@expressionProviders/@providers.0/@expressions.22">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.5/@labels.2/@modelFacet"
        className="MethodLabelExpressionLabelParser5119"
        viewExpression="//@expressionProviders/@providers.0/@expressions.23">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.5/@labels.3/@modelFacet"
        className="MethodLabelExpressionLabelParser5120"
        viewExpression="//@expressionProviders/@providers.0/@expressions.24">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.7/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5105"
        viewExpression="//@expressionProviders/@providers.0/@expressions.25">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.7/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5106"
        viewExpression="//@expressionProviders/@providers.0/@expressions.26">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.0/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5134"
        viewExpression="//@expressionProviders/@providers.0/@expressions.27">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.2/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5136"
        viewExpression="//@expressionProviders/@providers.0/@expressions.28">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.3/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5137"
        viewExpression="//@expressionProviders/@providers.0/@expressions.29">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.2/@labels.4/@modelFacet"
        className="ConnectionLabelExpressionLabelParser5138"
        viewExpression="//@expressionProviders/@providers.0/@expressions.30">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Connection"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.9/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5107"
        viewExpression="//@expressionProviders/@providers.0/@expressions.33">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.9/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5108"
        viewExpression="//@expressionProviders/@providers.0/@expressions.34">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExternalParser"
        uses="//@diagram/@childNodes.8/@labels.0/@modelFacet //@diagram/@childNodes.12/@labels.0/@modelFacet //@diagram/@links.0/@labels.0/@modelFacet //@diagram/@links.0/@labels.1/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.11/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5109"
        viewExpression="//@expressionProviders/@providers.0/@expressions.37">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.11/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5110"
        viewExpression="//@expressionProviders/@providers.0/@expressions.38">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.13/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5111"
        viewExpression="//@expressionProviders/@providers.0/@expressions.41">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.13/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5112"
        viewExpression="//@expressionProviders/@providers.0/@expressions.42">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.15/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5113"
        viewExpression="//@expressionProviders/@providers.0/@expressions.45">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.15/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5114"
        viewExpression="//@expressionProviders/@providers.0/@expressions.46">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.14/@labels.2/@modelFacet"
        className="MultipleGeneralizationLabelExpressionLabelParser5098"
        viewExpression="//@expressionProviders/@providers.0/@expressions.47">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/MultipleGeneralization"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.17/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5115"
        viewExpression="//@expressionProviders/@providers.0/@expressions.50">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.17/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5116"
        viewExpression="//@expressionProviders/@providers.0/@expressions.51">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.16/@labels.2/@modelFacet"
        className="MultipleSpecializationLabelExpressionLabelParser5079"
        viewExpression="//@expressionProviders/@providers.0/@expressions.52">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/MultipleSpecialization"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.19/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5117"
        viewExpression="//@expressionProviders/@providers.0/@expressions.55">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.19/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5118"
        viewExpression="//@expressionProviders/@providers.0/@expressions.56">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.22/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5143"
        viewExpression="//@expressionProviders/@providers.0/@expressions.61">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.22/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5144"
        viewExpression="//@expressionProviders/@providers.0/@expressions.62">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.21/@labels.1/@modelFacet"
        className="AttributeLabelExpressionLabelParser5126"
        viewExpression="//@expressionProviders/@providers.0/@expressions.63">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.21/@labels.3/@modelFacet"
        className="AttributeLabelExpressionLabelParser5128"
        viewExpression="//@expressionProviders/@providers.0/@expressions.64">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Attribute"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.24/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5145"
        viewExpression="//@expressionProviders/@providers.0/@expressions.67">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.24/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5146"
        viewExpression="//@expressionProviders/@providers.0/@expressions.68">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.23/@labels.1/@modelFacet"
        className="MethodLabelExpressionLabelParser5131"
        viewExpression="//@expressionProviders/@providers.0/@expressions.69">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.23/@labels.2/@modelFacet"
        className="MethodLabelExpressionLabelParser5132"
        viewExpression="//@expressionProviders/@providers.0/@expressions.70">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.23/@labels.3/@modelFacet"
        className="MethodLabelExpressionLabelParser5133"
        viewExpression="//@expressionProviders/@providers.0/@expressions.71">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Method"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.25/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5147"
        viewExpression="//@expressionProviders/@providers.0/@expressions.72">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.25/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5148"
        viewExpression="//@expressionProviders/@providers.0/@expressions.73">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.20/@labels.0/@modelFacet"
        className="EntityLabelExpressionLabelParser5139"
        viewExpression="//@expressionProviders/@providers.0/@expressions.74">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.20/@labels.1/@modelFacet"
        className="EntityLabelExpressionLabelParser5140"
        viewExpression="//@expressionProviders/@providers.0/@expressions.75">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.20/@labels.2/@modelFacet"
        className="EntityLabelExpressionLabelParser5141"
        viewExpression="//@expressionProviders/@providers.0/@expressions.76">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.20/@labels.3/@modelFacet"
        className="EntityLabelExpressionLabelParser5142"
        viewExpression="//@expressionProviders/@providers.0/@expressions.77">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Entity"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.0/@labels.1/@modelFacet"
        className="ModelLabelExpressionLabelParser5097"
        viewExpression="//@expressionProviders/@providers.0/@expressions.78">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Model"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.26/@labels.0/@modelFacet"
        className="RendererLabelExpressionLabelParser5149"
        viewExpression="//@expressionProviders/@providers.0/@expressions.79">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@childNodes.26/@labels.1/@modelFacet"
        className="RendererLabelExpressionLabelParser5150"
        viewExpression="//@expressionProviders/@providers.0/@expressions.80">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Renderer"/>
    </implementations>
    <implementations
        xsi:type="gmfgen:ExpressionLabelParser"
        uses="//@diagram/@topLevelNodes.0/@labels.1/@modelFacet"
        className="OntologyLabelExpressionLabelParser5096"
        viewExpression="//@expressionProviders/@providers.0/@expressions.81">
      <expressionContext
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.genmodel#//PLM/Ontology"/>
    </implementations>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
