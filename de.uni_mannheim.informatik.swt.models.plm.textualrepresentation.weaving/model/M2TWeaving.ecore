<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="M2TWeaving" nsURI="http://swt.informatik.uni-mannheim.de/M2TWeaving"
    nsPrefix="M2TWeaving">
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="WeavingModel">
    <eOperations name="findLinkForPLMElement" upperBound="-1" eType="#//WeavingLink">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Search the weaving link of a given model element"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="body" value="WeavingLink.allInstances()->select(l | l.modelElement = element)->asOrderedSet()"/>
      </eAnnotations>
      <eParameters name="element" lowerBound="1" eType="ecore:EClass ../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element"/>
    </eOperations>
    <eOperations name="findTextElementForOffset" upperBound="-1" eType="#//TextElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Finds the weving linkt that starts closest before the given offset"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="body" value="let allTextElements:Set(TextElement) =&#xD;&#xA;&#x9;TextElement.allInstances()&#xD;&#xA;in&#xD;&#xA;let closestDistance:Integer = &#xD;&#xA;&#x9;allTextElements->collect(e1 | offset - e1.offset)->select(n | n >= 0)->min()&#xD;&#xA;in&#xD;&#xA;allTextElements->select(e | (offset - e.offset >= 0) and ( (offset - e.offset) = closestDistance) )->asOrderedSet()"/>
      </eAnnotations>
      <eParameters name="offset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="links" upperBound="-1"
        eType="#//WeavingLink" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WeavingModelContent" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="WeavingLink" eSuperTypes="#//WeavingModelContent">
    <eOperations name="calculateOffset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Calculates the offset for this model element by taking the contained weaving links and text elements into account."/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="body" value="let firstChild:WeavingModelContent = &#xD;&#xA;&#x9;self.children->first()&#xD;&#xA;in&#xD;&#xA;&#x9;if (firstChild.oclIsUndefined()) then&#xD;&#xA;&#x9;&#x9;-1&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;if (firstChild.oclIsTypeOf(TextElement)) then&#xD;&#xA;&#x9;&#x9;&#x9;firstChild.oclAsType(TextElement).offset&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;firstChild.oclAsType(WeavingLink).calculateOffset()&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif "/>
      </eAnnotations>
    </eOperations>
    <eOperations name="calculateLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Calculates the length for this model element by taking the contained weaving links and text elements into account."/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="body" value="let lastChild:WeavingModelContent = &#xD;&#xA;&#x9;self.children->last()&#xD;&#xA;in&#xD;&#xA;&#x9;if (lastChild.oclIsUndefined()) then&#xD;&#xA;&#x9;&#x9;-1&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;if (lastChild.oclIsTypeOf(TextElement)) then&#xD;&#xA;&#x9;&#x9;&#x9;(lastChild.oclAsType(TextElement).offset + lastChild.oclAsType(TextElement).length) - self.calculateOffset()&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;lastChild.oclAsType(WeavingLink).calculateLength()&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif "/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="modelElement" eType="ecore:EClass ../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        eType="#//WeavingModelContent" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextElement" eSuperTypes="#//WeavingModelContent">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="offset" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="length" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
</ecore:EPackage>
