<?xml version="1.0" encoding="UTF-8"?>
<gmfmap:Mapping xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:gmfmap="http://www.eclipse.org/gmf/2008/mappings"
    xmlns:gmftool="http://www.eclipse.org/gmf/2005/ToolDefinition">
  <nodes>
    <containmentFeature
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//LMLModel/elements"/>
    <ownedChild>
      <domainMetaElement
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Ontology"/>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="plm.gmfgraph#OntologyFigureNameLabel"/>
        <features
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="plm.gmftool#//@palette/@tools.0/@tools.0"/>
      <diagramNode
          href="plm.gmfgraph#Ontology"/>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Ontology/children"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping">
            <diagramLabel
                href="plm.gmfgraph#ModelFigureNameLabel"/>
            <features
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="plm.gmftool#//@palette/@tools.0/@tools.1"/>
          <diagramNode
              href="plm.gmfgraph#Model"/>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0"
              referencedChild="//@nodes.1/@ownedChild">
            <containmentFeature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
          </children>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0">
            <containmentFeature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
            <ownedChild>
              <domainMetaElement
                  href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//DomainConnection"/>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping"
                  viewPattern="{0}">
                <diagramLabel
                    href="plm.gmfgraph#DomainConnectionFigureName"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping">
                <diagramLabel
                    href="plm.gmfgraph#DomainConnectionFigureNameExternal"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <labelMappings
                  xsi:type="gmfmap:ExpressionLabelMapping"
                  readOnly="true">
                <diagramLabel
                    href="plm.gmfgraph#DomainConnectionFigurePotency"/>
                <viewExpression
                    body="let potency:String = if (self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;potency"/>
              </labelMappings>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="plm.gmftool#//@palette/@tools.1/@tools.3"/>
              <diagramNode
                  href="plm.gmfgraph#DomainConnection"/>
              <children
                  compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@children.1/@ownedChild/@compartments.0">
                <containmentFeature
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Clabject/children"/>
                <ownedChild>
                  <domainMetaElement
                      href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Field"/>
                  <labelMappings
                      xsi:type="gmfmap:FeatureLabelMapping"
                      viewPattern="">
                    <diagramLabel
                        href="plm.gmfgraph#DomainEntityFieldFigureNameLabel"/>
                    <features
                        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
                  </labelMappings>
                  <labelMappings
                      xsi:type="gmfmap:ExpressionLabelMapping"
                      readOnly="true">
                    <diagramLabel
                        href="plm.gmfgraph#DomainEntityFieldFigurePotencyLabel"/>
                    <viewExpression
                        body="let durability:String = if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
                  </labelMappings>
                  <labelMappings
                      xsi:type="gmfmap:ExpressionLabelMapping"
                      readOnly="true">
                    <diagramLabel
                        href="plm.gmfgraph#DomainEntityFieldFigureDefaultValueLabel"/>
                    <viewExpression
                        body="self.datatype.name "/>
                  </labelMappings>
                  <tool
                      xsi:type="gmftool:CreationTool"
                      href="plm.gmftool#//@palette/@tools.1/@tools.1"/>
                  <diagramNode
                      href="plm.gmfgraph#DomnainEntityFieldNode"/>
                </ownedChild>
              </children>
              <compartments
                  children="//@nodes.0/@ownedChild/@children.0/@ownedChild/@children.1/@ownedChild/@children.0">
                <compartment
                    href="plm.gmfgraph#DomainConnectionsFieldsCompartment"/>
              </compartments>
            </ownedChild>
          </children>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0">
            <containmentFeature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
            <ownedChild>
              <domainMetaElement
                  href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Complement"/>
              <labelMappings
                  readOnly="true">
                <diagramLabel
                    href="plm.gmfgraph#ComplementFigureName"/>
              </labelMappings>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="plm.gmftool#//@palette/@tools.3/@tools.0"/>
              <diagramNode
                  href="plm.gmfgraph#Complement"/>
            </ownedChild>
          </children>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0">
            <containmentFeature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
            <ownedChild>
              <domainMetaElement
                  href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Equality"/>
              <domainInitializer
                  xsi:type="gmfmap:FeatureSeqInitializer">
                <initializers
                    xsi:type="gmfmap:FeatureValueSpec">
                  <feature
                      xsi:type="ecore:EAttribute"
                      href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
                  <value
                      body="'equals'"/>
                </initializers>
              </domainInitializer>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping"
                  readOnly="true"
                  viewPattern="{0}">
                <diagramLabel
                    href="plm.gmfgraph#EqualsFigureName"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="plm.gmftool#//@palette/@tools.3/@tools.1"/>
              <diagramNode
                  href="plm.gmfgraph#Equals"/>
            </ownedChild>
          </children>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0">
            <containmentFeature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
            <ownedChild>
              <domainMetaElement
                  href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Inversion"/>
              <labelMappings
                  readOnly="true">
                <diagramLabel
                    href="plm.gmfgraph#InversionFigureName"/>
              </labelMappings>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="plm.gmftool#//@palette/@tools.3/@tools.2"/>
              <diagramNode
                  href="plm.gmfgraph#Inversion"/>
            </ownedChild>
          </children>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0">
            <containmentFeature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
            <ownedChild>
              <domainMetaElement
                  href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//MultipleGeneralization"/>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping">
                <diagramLabel
                    href="plm.gmfgraph#MultipleGeneralizationName"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping">
                <diagramLabel
                    href="plm.gmfgraph#MultipleGeneralizationNameExternal"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="plm.gmftool#//@palette/@tools.4/@tools.2"/>
              <diagramNode
                  href="plm.gmfgraph#MultipleGeneralisation"/>
            </ownedChild>
          </children>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0">
            <containmentFeature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
            <ownedChild>
              <domainMetaElement
                  href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//MultipleSpecialization"/>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping">
                <diagramLabel
                    href="plm.gmfgraph#MultipleSpecializationName"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping">
                <diagramLabel
                    href="plm.gmfgraph#MultipleSpecializationNameExternal"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <labelMappings
                  xsi:type="gmfmap:ExpressionLabelMapping">
                <diagramLabel
                    href="plm.gmfgraph#MultipleSpecializationSetTheoryLabel"/>
                <viewExpression
                    body="let disjoint:String = &#xD;&#xA;&#x9;if (self.disjoint) then &#xD;&#xA;&#x9;&#x9;'disjoint' &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'overlaping ' &#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let complete:String = &#xD;&#xA;&#x9;if (self.complete) then &#xD;&#xA;&#x9;&#x9;'complete' &#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'incomplete' &#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;if (disjoint &lt;> ' ') then&#xD;&#xA;&#x9;'{'.concat(disjoint).concat('; ').concat(complete ).concat('}')&#xD;&#xA;else&#xD;&#xA;&#x9;' '&#xD;&#xA;endif"/>
              </labelMappings>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="plm.gmftool#//@palette/@tools.4/@tools.1"/>
              <diagramNode
                  href="plm.gmfgraph#MultipleSpecialisation"/>
            </ownedChild>
          </children>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0">
            <containmentFeature
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
            <ownedChild>
              <domainMetaElement
                  href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//BinaryGeneralization"/>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping">
                <diagramLabel
                    href="plm.gmfgraph#BinaryGeneralisationName"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <labelMappings
                  xsi:type="gmfmap:FeatureLabelMapping">
                <diagramLabel
                    href="plm.gmfgraph#BinaryGeneralizationNameExternal"/>
                <features
                    href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
              </labelMappings>
              <tool
                  xsi:type="gmftool:CreationTool"
                  href="plm.gmftool#//@palette/@tools.4/@tools.0"/>
              <diagramNode
                  href="plm.gmfgraph#BinaryGeneralization"/>
            </ownedChild>
          </children>
          <compartments
              children="//@nodes.0/@ownedChild/@children.0/@ownedChild/@children.0 //@nodes.0/@ownedChild/@children.0/@ownedChild/@children.1 //@nodes.0/@ownedChild/@children.0/@ownedChild/@children.2 //@nodes.0/@ownedChild/@children.0/@ownedChild/@children.3 //@nodes.0/@ownedChild/@children.0/@ownedChild/@children.4 //@nodes.0/@ownedChild/@children.0/@ownedChild/@children.5 //@nodes.0/@ownedChild/@children.0/@ownedChild/@children.6 //@nodes.0/@ownedChild/@children.0/@ownedChild/@children.7">
            <compartment
                href="plm.gmfgraph#DomainElementsCompartment"/>
          </compartments>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.0/@ownedChild/@children.0">
        <compartment
            href="plm.gmfgraph#ModelCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//LMLModel/elements"/>
    <ownedChild>
      <domainMetaElement
          href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//DomainEntity"/>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="{0}">
        <diagramLabel
            href="plm.gmfgraph#DomainEntityFigureNameLabel"/>
        <features
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:ExpressionLabelMapping"
          readOnly="true">
        <diagramLabel
            href="plm.gmfgraph#DomainEntityFigurePotencyLabel"/>
        <viewExpression
            body="let potency:String = if (self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;potency"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          readOnly="true">
        <diagramLabel
            href="plm.gmfgraph#DomainEntityFigureLevelLabel"/>
        <features
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Clabject/level"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:ExpressionLabelMapping"
          readOnly="true">
        <diagramLabel
            href="plm.gmfgraph#DomainEntityFigureAVSLabel"/>
        <viewExpression
            body="let renderingInformationAvailable:Boolean = &#xD;&#xA;&#x9;if (not self.renderer.oclIsUndefined()) then&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;false&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Check if attributes are rendered in AVS&#xD;&#xA;--**********************************&#xD;&#xA;let renderName:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;self.renderer.children->select(c | c.name = 'name')->first().oclAsType(Field).value = 'VisualRenderingEnum::MAX' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;self.renderer.children->select(c | c.name = 'name')->first().oclAsType(Field).value = 'VisualRenderingEnum::AVS'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderPotency:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;self.renderer.children->select(c | c.name = 'potency')->first().oclAsType(Field).value = 'VisualRenderingEnum::MAX' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;self.renderer.children->select(c | c.name = 'potency')->first().oclAsType(Field).value = 'VisualRenderingEnum::AVS'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderLevel:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;self.renderer.children->select(c | c.name = 'level')->first().oclAsType(Field).value = 'VisualRenderingEnum::MAX' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;self.renderer.children->select(c | c.name = 'level')->first().oclAsType(Field).value = 'VisualRenderingEnum::AVS'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let renderExpressed:Boolean =&#xD;&#xA;&#x9;if (renderingInformationAvailable) then&#xD;&#xA;&#x9;&#x9;self.renderer.children->select(c | c.name = 'expressed')->first().oclAsType(Field).value = 'VisualRenderingEnum::MAX' &#xD;&#xA;&#x9;&#x9;or &#xD;&#xA;&#x9;&#x9;self.renderer.children->select(c | c.name = 'expressed')->first().oclAsType(Field).value = 'VisualRenderingEnum::AVS'&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;true&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Get the name&#xD;&#xA;--**********************************&#xD;&#xA;let name : String =&#xD;&#xA;&#x9;if (renderName) then&#xD;&#xA;&#x9;&#x9;'name='.concat(self.name).concat(';')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the potency&#xD;&#xA;--**********************************&#xD;&#xA;let potencyString:String = &#xD;&#xA;&#x9;if (renderPotency and self.potency > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let potency: String = &#xD;&#xA;&#x9;if (renderPotency) then&#xD;&#xA;&#x9;&#x9;'potency='.concat(potencyString).concat(';')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the potency&#xD;&#xA;--**********************************&#xD;&#xA;let levelString:String = &#xD;&#xA;&#x9;if (renderLevel and self.level > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.potency.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.potency = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let level: String = &#xD;&#xA;&#x9;if (renderLevel) then&#xD;&#xA;&#x9;&#x9;'level='.concat(levelString).concat(';')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;--**********************************&#xD;&#xA;--Get the expressed value&#xD;&#xA;--**********************************&#xD;&#xA;let expressedString:String = &#xD;&#xA;&#x9;if (expressed) then&#xD;&#xA;&#x9;&#x9;'true'&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;'false'&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;&#xD;&#xA;let expressed: String = &#xD;&#xA;&#x9;if (renderExpressed) then&#xD;&#xA;&#x9;&#x9;'expressed='.concat(expressedString).concat(';')&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;''&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;let output:String = &#xD;&#xA;&#x9;'{'.concat(name).concat(potency).concat(level).concat(expressed).concat('}')&#xD;&#xA;in&#xD;&#xA;--**********************************&#xD;&#xA;--Write the output&#xD;&#xA;--**********************************&#xD;&#xA;if (output &lt;> '{}') then&#xD;&#xA;&#x9;output&#xD;&#xA;else&#xD;&#xA;&#x9;''&#xD;&#xA;endif"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="plm.gmftool#//@palette/@tools.1/@tools.0"/>
      <diagramNode
          href="plm.gmfgraph#DomainEntity"/>
      <children
          compartment="//@nodes.1/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Clabject/children"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Field"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              viewPattern="">
            <diagramLabel
                href="plm.gmfgraph#DomainEntityFieldFigureNameLabel"/>
            <features
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
          </labelMappings>
          <labelMappings
              xsi:type="gmfmap:ExpressionLabelMapping"
              readOnly="true">
            <diagramLabel
                href="plm.gmfgraph#DomainEntityFieldFigurePotencyLabel"/>
            <viewExpression
                body="let durability:String = if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
          </labelMappings>
          <labelMappings
              xsi:type="gmfmap:ExpressionLabelMapping"
              readOnly="true">
            <diagramLabel
                href="plm.gmfgraph#DomainEntityFieldFigureDefaultValueLabel"/>
            <viewExpression
                body="self.datatype.name"/>
          </labelMappings>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              viewPattern="= {0}">
            <diagramLabel
                href="plm.gmfgraph#DomainEntityFieldFigureDefaultValueLabel"/>
            <features
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Field/value"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="plm.gmftool#//@palette/@tools.1/@tools.1"/>
          <diagramNode
              href="plm.gmfgraph#DomnainEntityFieldNode"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.1/@ownedChild/@compartments.1">
        <containmentFeature
            href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Clabject/children"/>
        <ownedChild>
          <domainMetaElement
              href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Method"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping">
            <diagramLabel
                href="plm.gmfgraph#DomainEntityMethodFigureNameLabel"/>
            <features
                href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/name"/>
          </labelMappings>
          <labelMappings
              xsi:type="gmfmap:ExpressionLabelMapping"
              readOnly="true">
            <diagramLabel
                href="plm.gmfgraph#DomainEntityMethodFigurePotencyLabel"/>
            <viewExpression
                body="let durability:String = if (self.durability > 0) then OrderedSet{1000000, 10000, 1000, 100, 10, 1}->iterate(&#xD;&#xA;            denominator : Integer;&#xD;&#xA;            s : String = ''|&#xD;&#xA;            let numberAsString : String = OrderedSet{&#xD;&#xA;                    '0','1','2','3','4','5','6','7','8','9'&#xD;&#xA;                }->at(self.durability.div(denominator).mod(10) + 1)&#xD;&#xA;            in&#xD;&#xA;                if s='' and numberAsString = '0' then&#xD;&#xA;                    s&#xD;&#xA;                else&#xD;&#xA;                    s.concat(numberAsString)&#xD;&#xA;                endif&#xD;&#xA;        )&#xD;&#xA;&#x9;else &#xD;&#xA;&#x9;&#x9;if (self.durability = 0) then&#xD;&#xA;&#x9;&#x9;&#x9;'0'&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;'*'&#xD;&#xA;&#x9;&#x9;endif&#xD;&#xA;&#x9;endif&#xD;&#xA;in&#xD;&#xA;durability"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="plm.gmftool#//@palette/@tools.1/@tools.2"/>
          <diagramNode
              href="plm.gmfgraph#DomnainEntityMethodNode"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.1/@ownedChild/@children.0">
        <compartment
            href="plm.gmfgraph#DomainEntityFieldsCompartment"/>
      </compartments>
      <compartments
          children="//@nodes.1/@ownedChild/@children.1">
        <compartment
            href="plm.gmfgraph#DomainEntityMethodsCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <links>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="plm.gmfgraph#DomainConnectionParticipantFigureName"/>
    </labelMappings>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="plm.gmfgraph#DomainConnectionParticipantMultiplicity"/>
    </labelMappings>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.1/@tools.4"/>
    <diagramLink
        href="plm.gmfgraph#DomainConnectionParticipants"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//DomainConnection/participant"/>
  </links>
  <links>
    <domainMetaElement
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Instantiation"/>
    <containmentFeature
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Model/children"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.2/@tools.0"/>
    <diagramLink
        href="plm.gmfgraph#Instantiation"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Instantiation/instance"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Instantiation/type"/>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.3/@tools.3"/>
    <diagramLink
        href="plm.gmfgraph#SetRelationshipLink"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//SetRelationship/base"/>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.3/@tools.4"/>
    <diagramLink
        href="plm.gmfgraph#SetRelationshipLink"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Equality/equal"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(Equality)"/>
    </creationConstraints>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.3/@tools.4"/>
    <diagramLink
        href="plm.gmfgraph#SetRelationshipLink"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Inversion/inverse"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(Inversion)"/>
    </creationConstraints>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.3/@tools.4"/>
    <diagramLink
        href="plm.gmfgraph#SetRelationshipLink"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Complement/complement"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(Complement)"/>
    </creationConstraints>
  </links>
  <links>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="plm.gmfgraph#RenderedByFigureName"/>
    </labelMappings>
    <diagramLink
        href="plm.gmfgraph#RenderedByLink"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//Element/renderer"/>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.4/@tools.3"/>
    <diagramLink
        href="plm.gmfgraph#SuperTypeConnection"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//MultipleGeneralization/supertype"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(MultipleGeneralization)"/>
    </creationConstraints>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.4/@tools.4"/>
    <diagramLink
        href="plm.gmfgraph#SubTypeConnection"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//MultipleGeneralization/subtype"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(MultipleGeneralization)"/>
    </creationConstraints>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.4/@tools.3"/>
    <diagramLink
        href="plm.gmfgraph#SuperTypeConnection"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//MultipleSpecialization/supertype"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(MultipleSpecialization)"/>
    </creationConstraints>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.4/@tools.4"/>
    <diagramLink
        href="plm.gmfgraph#SubTypeConnection"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//MultipleSpecialization/subtype"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(MultipleSpecialization)"/>
    </creationConstraints>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.4/@tools.3"/>
    <diagramLink
        href="plm.gmfgraph#SuperTypeConnection"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//BinaryGeneralization/supertype"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(BinaryGeneralization)"/>
    </creationConstraints>
  </links>
  <links>
    <tool
        xsi:type="gmftool:CreationTool"
        href="plm.gmftool#//@palette/@tools.4/@tools.4"/>
    <diagramLink
        href="plm.gmfgraph#SubTypeConnection"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//BinaryGeneralization/subtype"/>
    <creationConstraints>
      <sourceEnd
          body="self.oclIsTypeOf(BinaryGeneralization)"/>
    </creationConstraints>
  </links>
  <diagram>
    <diagramCanvas
        href="plm.gmfgraph#PLM"/>
    <domainModel
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#/"/>
    <domainMetaElement
        href="../../de.uni_mannheim.informatik.swt.models.plm/model/PLM.ecore#//LMLModel"/>
    <palette
        href="plm.gmftool#//@palette"/>
  </diagram>
</gmfmap:Mapping>
